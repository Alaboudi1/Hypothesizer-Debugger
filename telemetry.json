{
    "ms-python.python-2022.16.1": {
        "events": {
            "ms-python.python/language_server.enabled": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.python/language_server.ready": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.python/language_server.request": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "method": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.python/language_server.startup": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.python/language_server/analysis_complete": {
                "common.remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "common.uikind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "configparseerroroccurred": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "elapsedms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "externalmb": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "fatalerroroccurred": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "heaptotalmb": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "heapusedmb": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "isdone": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "isfirstrun": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "numfilesanalyzed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "numfilesinprogram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "peakrssmb": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolverid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "rssmb": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.python/language_server/analysis_exception": {
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.python/language_server/completion_accepted": {
                "autoimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "dictionarykey": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.python/language_server/completion_coverage": {
                "failures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "overallfailures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "overallsuccesses": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "overalltotal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "successes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "total": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.python/language_server/completion_metrics": {
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lastknownmembernamehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lastknownmodulehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "packagehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "unknownmembernamehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.python/language_server/completion_slow": {
                "bindcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "bindtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "correlationid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportadditiontimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportedittimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportimportaliascount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportimportaliastimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportindexcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportindextimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportindexused": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportitemcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportmoduleresolvetimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportmoduletimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportsymbolcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimporttotaltimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportuserindexcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_completionitems": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_completionitemtelemetrybuildtimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_extensiontotaltimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_selecteditemtelemetrybuildtimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfilecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfiletime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevalcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.python/language_server/exception_intellicode": {
                "common.remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "common.uikind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.python/language_server/execute_command": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.python/language_server/import_heuristic": {
                "avgcost": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "avglevel": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "conflicts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "nativemodules": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "nativepackages": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "reason_because_it_is_not_a_valid_directory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "reason_could_not_parse_output": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "reason_did_not_find_file": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "reason_no_python_interpreter_search_path": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "reason_typeshed_path_not_found": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "resolverid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "total": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.python/language_server/import_metrics": {
                "absolutestubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "absolutetotal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "absoluteunresolved": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "absoluteuserunresolved": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "builtinimportstubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "builtinimporttotal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "common.remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "common.uikind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "localimportstubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "localimporttotal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "nativemodules": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "nativepackages": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "relativestubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "relativetotal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "relativeunresolved": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "resolverid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "stubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "thirdpartyimportstubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "thirdpartyimporttotal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "total": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "unresolvedmodules": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "unresolvedpackages": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "unresolvedpackageslowercase": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "unresolvedtotal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.python/language_server/index_slow": {
                "bindcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "bindtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_count": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfilecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfiletime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevalcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.python/language_server/installed_packages": {
                "packages": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "packageslowercase": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "resolverid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.python/language_server/intellicode_completion_item_selected": {
                "class": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "common.remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "common.uikind": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "elapsedtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failurereason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "isintellicodecommit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "memoryincreasekb": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "method": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "methods": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "modeltype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "modelversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "selecteditemtelemetrybuildtimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.python/language_server/intellicode_enabled": {
                "common.remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "common.uikind": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "enabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "startup": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.python/language_server/intellicode_model_load_failed": {
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.python/language_server/intellicode_onnx_load_failed": {
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.python/language_server/rename_files": {
                "affectedfilescount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "bindcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "bindtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "filerenamed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "parsecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfilecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfiletime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "typeevalcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.python/language_server/semantictokens_slow": {
                "bindcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "bindtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_count": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfilecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfiletime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevalcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.python/language_server/settings": {
                "autoimportcompletions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "autosearchpaths": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "completefunctionparens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "disableworkspacesymbol": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "enableextractcodeaction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "formatontype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "functionreturninlaytypehints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "hasconfigfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "hasextrapaths": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "importformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "indexing": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lspinteractivewindows": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lspnotebooks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "openfilesonly": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "typecheckingmode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "useimportheuristic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "uselibrarycodefortypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "variableinlaytypehints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "watchforlibrarychanges": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "workspacecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.python/language_server/startup_metrics": {
                "analysisms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "peakrssmb": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "presetfileopenms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokendeltams": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenfullms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenrangems": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "totalms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "userindexms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.python/language_server/workspaceindex_slow": {
                "bindcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "bindtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_count": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfilecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfiletime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevalcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.python/language_server/workspaceindex_threshold_reached": {
                "index_count": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.python/debug_in_terminal_button": {
                "owner": "paulacamargo25"
            },
            "ms-python.python/debug_adapter.using_wheels_path": {
                "usingwheels": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                }
            },
            "ms-python.python/debug_session.start": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "paulacamargo25"
                },
                "console": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "paulacamargo25"
                }
            },
            "ms-python.python/debug_session.error": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "paulacamargo25"
                },
                "console": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "paulacamargo25"
                }
            },
            "ms-python.python/debug_session.stop": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "paulacamargo25"
                },
                "console": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "paulacamargo25"
                }
            },
            "ms-python.python/debug_session.user_code_running": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "paulacamargo25"
                },
                "console": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "paulacamargo25"
                }
            },
            "ms-python.python/debugger": {
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "console": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "hasenvvars": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "hasargs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "django": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "fastapi": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "flask": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "jinja": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "islocalhost": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "ismodule": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "issudo": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "stoponentry": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "showreturnvalue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "pyramid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "subprocess": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "watson": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "pyspark": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "gevent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "scrapy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                }
            },
            "ms-python.python/debugger.attach_to_child_process": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25",
                    "isMeasurement": true
                }
            },
            "ms-python.python/debugger.attach_to_local_process": {
                "owner": "paulacamargo25"
            },
            "ms-python.python/debugger.configuration.prompts": {
                "configurationtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "autodetecteddjangomanagepypath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "autodetectedpyramidinipath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "autodetectedfastapimainpypath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "autodetectedflaskapppypath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                },
                "manuallyenteredavalue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "paulacamargo25"
                }
            },
            "ms-python.python/debugger.configuration.prompts.in.launch.json": {
                "owner": "paulacamargo25"
            },
            "ms-python.python/diagnostics.action": {
                "commandname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "ignorecode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "url": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/diagnostics.message": {
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/editor.load": {
                "codeloadingtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "condaversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "luabud"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "luabud"
                },
                "pythonversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "interpretertype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "terminal": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "luabud"
                },
                "workspacefoldercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "haspythonthree": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "startactivatetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "totalactivatetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "totalnonblockingactivatetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "usinguserdefinedinterpreter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "usingglobalinterpreter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                }
            },
            "ms-python.python/envfile_variable_substitution": {
                "owner": "karthiknadig"
            },
            "ms-python.python/envfile_workspace": {
                "hascustomenvpath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                }
            },
            "ms-python.python/execution_code": {
                "scope": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/execution_django": {
                "scope": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/format.format": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig",
                    "isMeasurement": true
                },
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "tool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "hascustomargs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "formatselection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/format.format_on_type": {
                "enabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/format.sort_imports": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig",
                    "isMeasurement": true
                },
                "originaleventname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/hashed_package_name": {
                "hashedname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                }
            },
            "ms-python.python/linter_not_installed_prompt": {
                "tool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/python_install_package": {
                "installer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "requiredinstaller": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "productname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "isinstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "envtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/linting": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig",
                    "isMeasurement": true
                },
                "tool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "hascustomargs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "executablespecified": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/environment_without_python_selected": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr",
                    "isMeasurement": true
                }
            },
            "ms-python.python/select_interpreter": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                }
            },
            "ms-python.python/select_interpreter_enter_button": {
                "owner": "karrtikr"
            },
            "ms-python.python/select_interpreter_enter_choice": {
                "choice": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/select_interpreter_selected": {
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/select_interpreter_enter_or_find": {
                "owner": "karrtikr"
            },
            "ms-python.python/select_interpreter_entered_exists": {
                "discovered": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/python_environments_api": {
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "apiname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/python_interpreter": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karrtikr"
                },
                "pythonversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/python_interpreter_activation_environment_variables": {
                "hasenvvars": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/python_interpreter_activation_for_running_code": {
                "hascommands": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karrtikr"
                },
                "terminal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "pythonversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "interpretertype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/python_interpreter_activation_for_terminal": {
                "hascommands": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karrtikr"
                },
                "terminal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "pythonversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "interpretertype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/python_interpreter_auto_selection": {
                "usecachedinterpreter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/python_interpreter_discovery": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr",
                    "isMeasurement": true
                },
                "interpreters": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr",
                    "isMeasurement": true
                },
                "environmentswithoutpython": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr",
                    "isMeasurement": true
                }
            },
            "ms-python.python/conda_inherit_env_prompt": {
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/python_interpreter_activate_environment_prompt": {
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/python_not_installed_prompt": {
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/python_experiments_init_performance": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                }
            },
            "ms-python.python/use_report_issue_command": {
                "owner": "paulacamargo25"
            },
            "ms-python.python/python_experiments_lsp_notebooks": {
                "owner": "luabud"
            },
            "ms-python.python/python_experiments_opt_in_opt_out_settings": {
                "optedinto": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "optedoutfrom": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                }
            },
            "ms-python.python/language_server_enabled": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/language_server_ready": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/language_server_startup": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/language_server_telemetry": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/language_server_request": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/jedi_language_server.enabled": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/jedi_language_server.ready": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/jedi_language_server.startup": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/jedi_language_server.request": {
                "owner": "karthiknadig"
            },
            "ms-python.python/extension_survey_prompt": {
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/repl": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr",
                    "isMeasurement": true
                }
            },
            "ms-python.python/linting.select": {
                "tool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "enabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/unittest.configure": {
                "owner": "eleanorjboyd"
            },
            "ms-python.python/unittest.configuring": {
                "tool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.python/activate_env_in_current_terminal": {
                "isterminalvisible": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/terminal.create": {
                "terminal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "triggeredby": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "pythonversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "interpretertype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/unittest.discovery.trigger": {
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.python/unittest.discovering": {
                "tool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.python/unittest.discovery.done": {
                "tool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.python/unittest.discovery.stop": {
                "owner": "eleanorjboyd"
            },
            "ms-python.python/unittest.run": {
                "tool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "debugging": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.python/unittest.run.stop": {
                "owner": "eleanorjboyd"
            },
            "ms-python.python/unittest.run.all_failed": {
                "owner": "eleanorjboyd"
            },
            "ms-python.python/unittest.disabled": {
                "owner": "eleanorjboyd"
            },
            "ms-python.python/terminal_shell_identification": {
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karrtikr"
                },
                "terminalprovided": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "shellidentificationsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "hascustomshell": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                },
                "hasshellinenv": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/activate_env_to_get_env_vars_failed": {
                "ispossiblycondaenv": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karrtikr"
                },
                "terminal": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karrtikr"
                }
            },
            "ms-python.python/tensorboard.launch_prompt_selection": {
                "owner": "donjayamanne"
            },
            "ms-python.python/tensorboard.session_launch": {
                "entrypoint": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                }
            },
            "ms-python.python/tensorboard.session_daemon_startup_duration": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                }
            },
            "ms-python.python/tensorboard.session_e2e_startup_duration": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                }
            },
            "ms-python.python/tensorboard.session_duration": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "owner": "donjayamanne"
            },
            "ms-python.python/tensorboard.entrypoint_shown": {
                "entrypoint": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                }
            },
            "ms-python.python/tensorboard.install_prompt_selection": {
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "operationtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                }
            },
            "ms-python.python/tensorboard_detected_in_integrated_terminal": {
                "owner": "donjayamanne"
            },
            "ms-python.python/tensorboard.package_install_result": {
                "wasprofilerpluginattempted": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne"
                },
                "wastensorboardattempted": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne"
                },
                "wasprofilerplugininstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne"
                },
                "wastensorboardinstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne"
                }
            },
            "ms-python.python/tensorboard.torch_profiler_import": {
                "owner": "donjayamanne"
            },
            "ms-python.python/tensorboard_jump_to_source_request": {
                "owner": "donjayamanne"
            },
            "ms-python.python/tensorboard_jump_to_source_file_not_found": {
                "owner": "donjayamanne"
            },
            "ms-python.python/environment.creating": {
                "environmenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "pythonversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/environment.created": {
                "environmenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/environment.failed": {
                "environmenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/environment.installing_packages": {
                "environmenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "using": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/environment.installed_packages": {
                "environmenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "using": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.python/query-expfeature": {
                "owner": "luabud",
                "comment": "Logs queries to the experiment service by feature for metric calculations",
                "abexp.queriedfeature": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The experimental feature being queried"
                }
            },
            "ms-python.python/call-tas-error": {
                "owner": "luabud",
                "comment": "Logs when calls to the experiment service fails",
                "errortype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Type of error when calling TAS (ServerError, NoResponse, etc.)"
                }
            }
        },
        "commonProperties": {}
    },
    "ms-toolsai.jupyter-2022.9.1202862440": {
        "events": {
            "ms-toolsai.jupyter/DATASCIENCE.ADD_CELL_BELOW": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.CLICKED_EXPORT_NOTEBOOK_AS_QUICK_PICK": {
                "format": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "What format to export to was selected in the quick pick."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.CREATE_NEW_INTERACTIVE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DATA_VIEWER_DATA_DIMENSIONALITY": {
                "numberofdimensions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "This property represents the number of dimensions on the target variable being sliced. This should always be 2 at minimum.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DATA_VIEWER_SLICE_ENABLEMENT_STATE_CHANGED": {
                "newstate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "This property is either 'checked' when the result of toggling the checkbox is for slicing to be enabled, or 'unchecked' when the result of toggling the checkbox is for slicing to be disabled."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DATA_VIEWER_SLICE_OPERATION": {
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "This property indicates whether the slice operation was triggered using the dropdown or the textbox in the slice control panel. `source` is one of `dropdown`, `textbox`, or `checkbox`."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DEBUG_CONTINUE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DEBUG_CURRENT_CELL": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DEBUG_FILE_INTERACTIVE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DEBUG_STEP_OVER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DEBUG_STOP": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DEBUGGING.CLICKED_ON_SETUP": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DEBUGGING.CLICKED_RUN_AND_DEBUG_CELL": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DEBUGGING.CLICKED_RUNBYLINE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DEBUGGING.CLOSED_MODAL": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DEBUGGING.ENDED_SESSION": {
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "roblourens",
                    "comment": "The reason the session ended."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DEBUGGING.IPYKERNEL6_STATUS": {
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "roblourens",
                    "comment": "Whether ipykernel 6 is installed."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DEBUGGING.SUCCESSFULLY_STARTED_IW_JUPYTER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DEBUGGING.SUCCESSFULLY_STARTED_RUN_AND_DEBUG_CELL": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DEBUGGING.SUCCESSFULLY_STARTED_RUNBYLINE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.DISABLE_INTERACTIVE_SHIFT_ENTER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.ENABLE_INTERACTIVE_SHIFT_ENTER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.ENTER_JUPYTER_URI": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.EXECUTE_CELL": {
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.EXPORT_NOTEBOOK_AS": {
                "format": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "What format was the export performed to."
                },
                "cancelled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Was the export operation cancelled."
                },
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Was the export operation successful."
                },
                "opened": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Did the user end with opening the file in VS Code."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.EXPORT_NOTEBOOK_AS_COMMAND": {
                "format": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "What format was the export performed to."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.EXPORT_NOTEBOOK_AS_FAILED": {
                "format": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "What format was the export performed to."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.EXPORT_PYTHON_FILE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.EXPORT_PYTHON_FILE_AND_OUTPUT": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.FAILED_SHOW_DATA_EXPLORER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.FAILED_TO_CREATE_CONTROLLER": {
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "What kind of kernel spec did we fail to create."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.GOTO_NEXT_CELL_IN_FILE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.GOTO_PREV_CELL_IN_FILE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.IMPORT_NOTEBOOK": {
                "scope": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "The command can be called as a command, in which a file then needs to be selected, or with a file as the context already, in which case the import command doesn't ask for selection."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.INTERACTIVE_WINDOW_DEBUG_SETUP_CODE_FAILURE": {
                "ename": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "roblourens",
                    "comment": "The error name of the failure."
                },
                "evalue": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "roblourens",
                    "comment": "The error value of the failure."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.INTERRUPT": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.JUPYTER_KERNEL_API_ACCESS": {
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Extension Id that's attempting to use the API."
                },
                "allowed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Whether or not the extension was able to use the API."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.JUPYTER_KERNEL_API_USAGE": {
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Extension Id that's attempting to use the API."
                },
                "pemused": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Name of the API member used."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.JUPYTER_KERNEL_FILTER_USED": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.JUPYTER_KERNEL_HIDDEN_VIA_FILTER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.JUPYTER_NOT_INSTALLED_ERROR_SHOWN": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.KERNEL_CRASH": {
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.KERNEL_SPEC_LANGUAGE": {
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Whether this is a local or remote kernel."
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernelSpec."
                },
                "usesshell": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Whether shell is used to start the kernel. E.g. `\"/bin/sh\"` is used in the argv of the kernelSpec. OCaml is one such kernel."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.KERNEL_STARTUP_CODE_FAILURE": {
                "ename": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "The error name of the failure."
                },
                "evalue": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "The error value of the failure"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.NATIVE.OPEN_NOTEBOOK_ALL": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.NO_ACTIVE_KERNEL_SESSION": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.NOTEBOOK_INTERRUPT": {
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "The result of the interrupt,"
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.NOTEBOOK_RESTART": {
                "starttimeonly": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "If true, this is the total time taken to restart the kernel (excluding times to stop current cells and the like). Also in the case of raw kernels, we keep a separate process running, and when restarting we just switch to that process. In such cases this value will be `undefined`. In the case of raw kernels this will be true only when starting a new kernel process from scratch."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.NOTEBOOK_START": {
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.OPEN_PLOT_VIEWER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.PYTHON_VARIABLE_FETCHING_CODE_FAILURE": {
                "ename": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "The error name of the failure."
                },
                "evalue": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "The error value of the failure"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RECOMMENT_EXTENSION": {
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Extension we recommended the user to install."
                },
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "`displayed` - If prompt was displayed `dismissed` - If prompt was displayed & dismissed by the user `ok` - If prompt was displayed & ok clicked by the user `cancel` - If prompt was displayed & cancel clicked by the user `doNotShowAgain` - If prompt was displayed & doNotShowAgain clicked by the user"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.REFRESH_DATA_VIEWER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RESTART_KERNEL_COMMAND": {
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_ALL_CELLS": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_ALL_CELLS_ABOVE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_BY_LINE_VARIABLE_HOVER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_CELL_AND_ALL_BELOW": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_CHANGE_CELL_TO_CODE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_CHANGE_CELL_TO_MARKDOWN": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_CURRENT_CELL": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_CURRENT_CELL_AND_ADD_BELOW": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_CURRENT_CELL_AND_ADVANCE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_DELETE_CELLS": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_EXTEND_SELECTION_BY_CELL_ABOVE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_EXTEND_SELECTION_BY_CELL_BELOW": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_FILE_INTERACTIVE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_FROM_LINE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_INSERT_CELL_ABOVE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_INSERT_CELL_BELOW": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_INSERT_CELL_BELOW_POSITION": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_MOVE_CELLS_DOWN": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_MOVE_CELLS_UP": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_SELECT_CELL": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_SELECT_CELL_CONTENTS": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_SELECTION_OR_LINE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.RUN_TO_LINE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.SELECT_JUPYTER_INTERPRETER_Command": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.SELECT_JUPYTER_URI": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.SELECT_LOCAL_JUPYTER_KERNEL": {
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.SELECT_REMOTE_JUPYTER_KERNEL": {
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.SELFCERTSMESSAGECLOSE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.SELFCERTSMESSAGEENABLED": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.SET_JUPYTER_URI_LOCAL": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.SET_JUPYTER_URI_UI_DISPLAYED": {
                "commandsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "This telemetry tracks the source of this UI. nonUser - Invoked internally by our code. toolbar - Invoked by user from Native or Interactive window toolbar. commandPalette - Invoked from command palette by the user. nativeNotebookStatusBar - Invoked from Native notebook statusbar. nativeNotebookToolbar - Invoked from Native notebook toolbar."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.SET_JUPYTER_URI_USER_SPECIFIED": {
                "azure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Was the URI set to an Azure uri."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.SHOW_DATA_EXPLORER": {
                "rows": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Count of rows in the target data frame.",
                    "isMeasurement": true
                },
                "columns": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Count of columns in the target data frame.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.SHOW_DATA_EXPLORER_ROWS_LOADED": {
                "rowstimer": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Timer to indicate how long it took to load all the rows",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.START_SHOW_DATA_EXPLORER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.USER_DID_NOT_INSTALL_JUPYTER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.USER_DID_NOT_INSTALL_PANDAS": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.USER_INSTALLED_JUPYTER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATASCIENCE.USER_INSTALLED_PANDAS": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATAVIEWER.USING_INTERPRETER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DATAVIEWER.USING_KERNEL": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.ACTIVE_INTERPRETER_LISTING_PERF": {
                "firsttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this is the first time in the session. (fetching kernels first time in the session is slower, later its cached). This is a generic property supported for all telemetry (sent by decorators)."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.CELL_OUTPUT_MIME_TYPE": {
                "mimetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Mimetype of the output."
                },
                "when": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Whether the package was detected in an existing file (upon open, upon save, upon close) or when it was being used during execution."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.CODE_LENS_ACQ_TIME": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.COMMAND_EXECUTED": {
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "amunger",
                    "comment": "Name of the command executed."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.CONNECTFAILEDJUPYTER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.CONNECTLOCALJUPYTER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.CONNECTREMOTEEXPIREDCERTFAILEDJUPYTER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.CONNECTREMOTEFAILEDJUPYTER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.CONNECTREMOTEJUPYTER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.CONNECTREMOTEJUPYTER_VIA_LOCALHOST": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.CONNECTREMOTESELFCERTFAILEDJUPYTER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.EXECUTE_CELL_PERCEIVED_COLD": {
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.EXECUTE_CELL_PERCEIVED_WARM": {
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.FAILED_TO_UPDATE_JUPYTER_KERNEL_SPEC": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.GET_ACTIVATED_ENV_VARIABLES": {
                "envtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Type of the Python environment."
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Reason for not being able to get the env variables."
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Source where the env variables were fetched from. If `python`, then env variables were fetched from Python extension. If `jupyter`, then env variables were fetched from Jupyter extension."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.GET_PASSWORD_FAILURE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.GET_PASSWORD_SUCCESS": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.INTERACTIVE_FILE_TOOLTIPS_PERF": {
                "isresultnull": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Result is null if user signalled cancellation or if we timed out"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.INTERPRETER_LISTING_PERF": {
                "firsttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this is the first time in the session. (fetching kernels first time in the session is slower, later its cached). This is a generic property supported for all telemetry (sent by decorators)."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.IPYWIDGET_DISCOVER_WIDGETS_NB_EXTENSIONS": {
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Whether we're looking for widgets on local Jupyter environment (local connections) or remote."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.IPYWIDGET_DISCOVERY_ERRORED": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.IPYWIDGET_EXTENSIONJS_INFO": {
                "failure": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Reason for the failure."
                },
                "patternusedtoregisterrequireconfig": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Pattern (code style) used to register require.config enties. Pattern (code style) used to register require.config entries."
                },
                "widgetfoldernamehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Hash of the widget folder name."
                },
                "requireentrypointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of entries in the require config.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.IPYWIDGET_LOAD_FAILURE": {
                "timedout": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we timedout getting the source of the script (fetching script source in extension code)."
                },
                "isonline": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we've detected a connection to the internet or not (to access the CDN)."
                },
                "modulehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Hash of the widget module."
                },
                "moduleversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Version of the module."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.IPYWIDGET_LOAD_SUCCESS": {
                "modulehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Hash of the module name."
                },
                "moduleversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Version of the module."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.IPYWIDGET_OVERHEAD": {
                "totaloverheadinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total time in ms",
                    "isMeasurement": true
                },
                "numberofmessageswaitedon": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of messages",
                    "isMeasurement": true
                },
                "averagewaittime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Average wait timne.",
                    "isMeasurement": true
                },
                "numberofregisteredhooks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Number of registered hook.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.IPYWIDGET_PROMPT_TO_USE_CDN": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.IPYWIDGET_PROMPT_TO_USE_CDN_SELECTION": {
                "selection": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "The section made by the user."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.IPYWIDGET_RENDER_FAILURE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.IPYWIDGET_TIME_TO_COPY_NBEXTENSIONS_DIR": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.IPYWIDGET_UNHANDLED_MESSAGE": {
                "msg_type": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Type of the protocol message sent by Jupyter kernel."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.IPYWIDGET_USED_BY_USER": {
                "cdnsearched": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Whether we searched CDN or not."
                },
                "hashedname": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Hash of the widget module. If the widget is found on a CDN, then the unhashed name is sent in `moduleName`."
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Where did we find the hashed name (CDN or user environment or remote jupyter)."
                },
                "modulename": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Name of the widget module, sent only for cases where `source` is `cdn`. As that is the onl time we can safely send the name (if its on public CDN then its public information)."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.IPYWIDGET_WIDGET_VERSION_NOT_SUPPORTED_LOAD_FAILURE": {
                "modulehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Hash of the widget module."
                },
                "moduleversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Version of the module."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.JUPYTER_CREATING_NOTEBOOK": {
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.JUPYTER_CUSTOM_COMMAND_LINE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.JUPYTER_INTALLED_BUT_NO_KERNELSPEC_MODULE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.JUPYTER_REGISTER_INTERPRETER_AS_KERNEL": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.JUPYTERSTARTUPCOST": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.KERNEL_COUNT": {
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel list. Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel list. Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel list. Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "condaenvssharingsameinterpreter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Total number of conda environments that share the same interpreter This happens when we create conda envs without the `python` argument. Such conda envs don't work today in the extension. Hence users with such environments could hvae issues with starting kernels or packages not getting loaded correctly or at all.",
                    "isMeasurement": true
                },
                "localkernelspeccount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of local kernel specs in the list.",
                    "isMeasurement": true
                },
                "remotekernelspeccount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of remote kernel specs in the list.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.KERNEL_LAUNCHER_PERF": {
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.KERNEL_LISTING_PERF": {
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Whether this telemetry is for listing of all kernels or just python or just non-python. (fetching kernels first time in the session is slower, later its cached)."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.KERNEL_SPEC_NOT_FOUND": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.NATIVE_VARIABLE_VIEW_LOADED": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.NATIVE_VARIABLE_VIEW_MADE_VISIBLE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.NATIVE.NOTEBOOK_OPEN_COUNT": {
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Total number of notebooks opened in a session. Not unique. If usre opens & closes a notebook, that counts as 2.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.NATIVE.NOTEBOOK_RUN_COUNT": {
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Number of cells executed. If a cell is executed 10 times, thats counted as 10.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.NEW_FILE_USED_IN_INTERACTIVE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.NUMBER_OF_REMOTE_KERNEL_IDS_SAVED": {
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Count is the number of kernels saved in the list.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.PERCEIVED_JUPYTER_STARTUP_NOTEBOOK": {
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.PREFERRED_KERNEL": {
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "hasactiveinterpreter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "If we have an active interpreter or not."
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Language of the target notebook or interactive window"
                },
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Note if we did or did not find a preferred kernel."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.PREFERRED_KERNEL_EXACT_MATCH": {
                "matchedreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "How/why the preferred kernel was matched the way it was.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.PYTHON_EXTENSION_INSTALLED_VIA_KERNEL_PICKER": {
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Did the Extension install succeed or fail?"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.PYTHON_EXTENSION_NOT_INSTALLED": {
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "The message was displayed, or indicate that the user dismissed or downloaded the message."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.PYTHON_KERNEL_EXECUTABLE_MATCHES": {
                "kernelconnectiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Type of kernel connection, whether its local, remote or a python environment."
                },
                "match": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we've managed to correctly identify the Python Environment."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.PYTHON_MODULE_INSTALL": {
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Action taken by the user or the extension."
                },
                "ismodulepresent": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the module was already (once before) installed into the python environment or whether this already exists (detected via `pip list`)"
                },
                "modulename": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Name of the python module to be installed."
                },
                "pythonenvtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Type of the python environment."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.PYTHON_NOT_INSTALLED": {
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "The message was displayed, or indicate that the user dismissed or downloaded the message."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.RANK_KERNELS_PERF": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.RAWKERNEL_CREATING_NOTEBOOK": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.RAWKERNEL_INFO_RESPONSE": {
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "timedout": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we timedout while waiting for response for Kernel info request."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "attempts": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of attempts and sending a request and waiting for response.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.RAWKERNEL_PROCESS_LAUNCH": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.RAWKERNEL_SESSION_CONNECT": {
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.RAWKERNEL_SESSION_DISPOSED": {
                "stacktrace": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This is the callstack at the time that the `dispose` method is called, intended for us to be able to identify who called `dispose` on the RawSession."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.RAWKERNEL_SESSION_KERNEL_PROCESS_EXITED": {
                "exitreason": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "The kernel process's exit reason, based on the error object's reason"
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "exitcode": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "The kernel process's exit code.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.RAWKERNEL_SESSION_NO_IPYKERNEL": {
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Captures the result of the error message, whether user dismissed this or picked a new kernel or the like.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.RAWKERNEL_SESSION_SHUTDOWN": {
                "isrequesttoshutdownrestartsession": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This indicates whether the session being shutdown is a restart session."
                },
                "stacktrace": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This is the callstack at the time that the `shutdownSession` method is called, intended for us to be ale to identify who tried to shutdown the session."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.RAWKERNEL_SESSION_START": {
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.RAWKERNEL_SESSION_START_USER_CANCEL": {
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.RAWKERNEL_START_RAW_SESSION": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.REGISTER_AND_USE_INTERPRETER_AS_KERNEL": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.RESTART_KERNEL": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.RUNTEST": {
                "testname": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "amunger",
                    "comment": "The name of the test."
                },
                "testresult": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "amunger",
                    "comment": "Whether the test passed or failed."
                },
                "perfwarmup": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "amunger",
                    "comment": "If the test was an initial run to warmup the product."
                },
                "commithash": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "amunger",
                    "comment": "The git commit that the test was run against."
                },
                "timedcheckpoints": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "amunger",
                    "comment": "Timings for segments of the test."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.SELECT_JUPYTER_INTERPRETER": {
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "If the value or `result` is empty this means we displayed the message to the user and user hasn't made a choice yet.  The result of the selection. notSelected - No interpreter was selected. selected - An interpreter was selected (and configured to have jupyter and notebook). installationCancelled - Installation of jupyter and/or notebook was cancelled for an interpreter. selectAnotherInterpreter - Selected another interpreter."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.SETTINGS": {
                "settingsjson": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "amunger",
                    "comment": "A json representation of settings that the user has set. The values for string based settings are transalted to 'default' | 'non-default' unless white-listed."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.SHIFTENTER_BANNER_SHOWN": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.SHOW_DATA_NO_PANDAS": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.SHOW_DATA_PANDAS_INSTALL_CANCELED": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.SHOW_DATA_PANDAS_OK": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.SHOW_DATA_PANDAS_TOO_OLD": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.START_EXECUTE_NOTEBOOK_CELL_PERCEIVED_COLD": {
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.START_JUPYTER_PROCESS": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.START_SESSION_FAILED_JUPYTER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.SWITCH_KERNEL": {
                "actionsource": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether this was started by Jupyter extension or a 3rd party. Common to most of the events."
                },
                "disableui": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel) Common to most of the events."
                },
                "userexecutedcell": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether the user executed a cell. Common to most of the events."
                },
                "resourcehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Used to check whether a particular notebook fails across time or not. This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash, and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points and have a better understanding of what is going on, e.g. why something failed. Common to most of the events."
                },
                "pythonenvironmentversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date) Common to most of the events."
                },
                "pythonenvironmenttype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Common to most of the events."
                },
                "pythonenvironmentpath": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "A key, so that rest of the information is tied to this. (hash) Common to most of the events."
                },
                "pythonenvironmentpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Comma delimited list of hashed packages & their versions. Common to most of the events."
                },
                "kernelsessionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Common to most of the events."
                },
                "kernellanguage": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Language of the kernel connection. Common to most of the events."
                },
                "kernelid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Hash of the Kernel Connection id. Common to most of the events."
                },
                "kernelconnectiontype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether kernel was started using kernel spec, interpreter, etc. Common to most of the events."
                },
                "isusingactiveinterpreter": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether this resource is using the active Python interpreter or not. Common to most of the events."
                },
                "capturedenvvars": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Common to most of the events."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "interruptcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "This number gets reset after we attempt a restart or change kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "switchkernelcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Number of times the kernel was changed. Common to most of the events.",
                    "isMeasurement": true
                },
                "startfailurecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Number of times starting the kernel failed. Common to most of the events.",
                    "isMeasurement": true
                },
                "restartcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "This number gets reset after change the kernel. Common to most of the events.",
                    "isMeasurement": true
                },
                "pythonenvironmentcount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Total number of python environments. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelspeccount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Total number of kernel specs in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernellivecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Total number of live kernels in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "kernelinterpretercount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "IanMatthewHuff",
                    "comment": "Total number of interpreters in the kernel spec list. Common to most of the events.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.VARIABLE_EXPLORER_FETCH_TIME": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.VARIABLE_EXPLORER_VARIABLE_COUNT": {
                "variablecount": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "Count of variables requested",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.VSCNOTEBOOK_CELL_TRANSLATION_FAILED": {
                "outputtype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Type of the output received from the Jupyter kernel. This is required to identify output types that we're not mapping correctly."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.WAIT_FOR_IDLE_JUPYTER": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.WEBVIEW_STARTUP": {
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "IanMatthewHuff",
                    "comment": "The type of webview started up."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.ZMQ_NATIVE_BINARIES_LOADING": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/DS_INTERNAL.ZMQ_NATIVE_BINARIES_NOT_LOADING": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/ENVFILE_VARIABLE_SUBSTITUTION": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/ENVFILE_WORKSPACE": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/EXTENSION.LOAD": {
                "codeloadingtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Time taken to load the code.",
                    "isMeasurement": true
                },
                "totalactivatetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Time taken to activate the extension.",
                    "isMeasurement": true
                },
                "workspacefoldercount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Number of workspace folders opened",
                    "isMeasurement": true
                },
                "endactivatetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Time when activation completed.",
                    "isMeasurement": true
                },
                "startactivatetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Time when activation started.",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/HASHED_PACKAGE_NAME": {
                "hashednamev2": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Hash of the package name"
                },
                "when": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Whether the package was detected in an existing file (upon open, upon save, upon close) or when it was being used during execution."
                },
                "resourcetype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Common to most of the events."
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/HASHED_PACKAGE_PERF": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/JUPYTER_IS_INSTALLED": {
                "detection": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Jupyter is in current path of process owned by VS Code. I.e. jupyter can be found in the path as defined by the env variable process.env['PATH']."
                },
                "frontend": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "comment": "Whether this is jupyter lab or notebook."
                },
                "reason": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Reason for failure."
                },
                "frontendversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne",
                    "comment": "Version of the form 6.11, 4.8",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/OPEN_DATAVIEWER_FROM_VARIABLE_WINDOW_ERROR_EX": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/OPEN_DATAVIEWER_FROM_VARIABLE_WINDOW_REQUEST_EX": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            },
            "ms-toolsai.jupyter/OPEN_DATAVIEWER_FROM_VARIABLE_WINDOW_SUCCESS_EX": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of a measure in milliseconds. Common measurement used across a number of events.",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a failure. Common to most of the events."
                },
                "failurecategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. Common to most of the events."
                },
                "failuresubcategory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Common to most of the events."
                },
                "pythonerrorfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "pythonerrorpackage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Common to most of the events."
                },
                "stacktrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Node stacktrace without PII. Common to most of the events."
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Determine where an extension was installed from. Common to all events."
                },
                "isamlcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is an AML compute instance. Common to all events."
                },
                "isinsiderextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the Insider version of the Jupyter extension or not. Common to all events."
                },
                "ispythonextensioninstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether Python extension is installed or not. Common to all events."
                },
                "rawkernelsupported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the raw kernel is supported or not. Common to all events."
                }
            }
        },
        "commonProperties": {}
    },
    "ms-vscode-remote.remote-containers-0.260.0": {
        "events": {
            "ms-vscode-remote.remote-containers/query-expfeature": {
                "abexp.queriedfeature": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containers/performanceEntry": {
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                }
            },
            "ms-vscode-remote.remote-containers/errorAction": {
                "resolver": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containers/extraInfo": {
                "remotecloud": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containers/resolver": {
                "resolver": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "hosttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "configtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "configproperties": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "configextensions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "configfeatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "hardwareid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "osreleaseid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "osreleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "errormessage": {
                    "classification": "CallstackOrException",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containers/dockerVersion": {
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "errormessage": {
                    "classification": "CallstackOrException",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containers/createConfiguration": {
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "definitionname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containers/reopenNotificationOpen": {
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containers/reopenNotificationResult": {
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containers/userCLI": {
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            }
        },
        "commonProperties": {
            "common.os": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            },
            "common.platformversion": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            },
            "common.extname": {
                "classification": "PublicNonPersonalData",
                "purpose": "FeatureInsight"
            },
            "common.extversion": {
                "classification": "PublicNonPersonalData",
                "purpose": "FeatureInsight"
            },
            "common.cli": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            },
            "common.vscodemachineid": {
                "classification": "EndUserPseudonymizedInformation",
                "purpose": "FeatureInsight"
            },
            "common.environment": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            }
        }
    },
    "ms-vscode-remote.remote-containers-0.261.0": {
        "events": {
            "ms-vscode-remote.remote-containers/dockerVersion": {
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "errormessage": {
                    "classification": "CallstackOrException",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containers/extraInfo": {
                "remotecloud": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containers/resolver": {
                "resolver": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "hosttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "configtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "configproperties": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "configextensions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "configfeatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "hardwareid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "osreleaseid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "osreleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "errormessage": {
                    "classification": "CallstackOrException",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containers/reopenNotificationOpen": {
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containers/reopenNotificationResult": {
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containers/errorAction": {
                "resolver": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containers/userCLI": {
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containers/createConfiguration": {
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "definitionname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containers/performanceEntry": {
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                }
            },
            "ms-vscode-remote.remote-containers/query-expfeature": {
                "abexp.queriedfeature": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            }
        },
        "commonProperties": {
            "common.os": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            },
            "common.platformversion": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            },
            "common.extname": {
                "classification": "PublicNonPersonalData",
                "purpose": "FeatureInsight"
            },
            "common.extversion": {
                "classification": "PublicNonPersonalData",
                "purpose": "FeatureInsight"
            },
            "common.cli": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            },
            "common.environment": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            },
            "common.vscodemachineid": {
                "classification": "EndUserPseudonymizedInformation",
                "purpose": "FeatureInsight"
            }
        }
    },
    "ms-vscode-remote.remote-ssh-0.90.1": {
        "events": {
            "ms-vscode-remote.remote-ssh/resolver": {
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "exitcodelabel": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "exitcode": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "resolveattempts": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "retries": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.totalresolvetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.presshtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.scripttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.downloadtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.installtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.extinstalltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.serverstarttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.localdownloadtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.scptime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "osreleaseid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "arch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "askedpw": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "askedpassphrase": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "asked2fa": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "askedhostkey": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "dynamicforwarding": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "localserver": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "gotunrecognizedprompt": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "remoteinconfigfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "didlocaldownload": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "installunpackcode": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-vscode-remote.remote-ssh/extraInfo": {
                "remotecloud": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            }
        },
        "commonProperties": {}
    },
    "ms-vscode-remote.remote-wsl-0.72.0": {
        "events": {
            "ms-vscode-remote.remote-wsl/query-expfeature": {
                "owner": "aeschli",
                "comment": "Logs queries to the experiment service by feature for metric calculations",
                "abexp.queriedfeature": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The experimental feature being queried"
                }
            },
            "ms-vscode-remote.remote-wsl/resolver": {
                "owner": "aeschli",
                "comment": "Reports the use and outcome of a resolver",
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the resolver was successful: 'success' | 'failure'"
                },
                "wslversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The WSL version installed of the selected ditro"
                },
                "wsltype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "WSL1 or WSL2"
                },
                "wsldistro": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The distro name"
                },
                "windowsbuild": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The Windows build number"
                },
                "connectionmethod": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The connection method used to connect to the server: 'localhost', 'wslExeProxy' or 'wsl2VMAddress'"
                },
                "failurereason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "In a case of failure, the reason: 'servererror', 'serverclose', 'timeout', 'wslnotfound', 'wslupdaterequired', 'undefined'"
                }
            },
            "ms-vscode-remote.remote-wsl/welcomePage": {
                "owner": "aeschli",
                "comment": "Tracks how the welcome page is used",
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Interactions triggered from the welcome page: 'command' | 'link' | 'hide'"
                },
                "detail": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Command id or link URI"
                }
            },
            "ms-vscode-remote.remote-wsl/openInWSL": {
                "owner": "aeschli",
                "comment": "Tracks the use of the open command",
                "origin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "From where the command was trggered. Currently only 'other'"
                },
                "iswslinstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether WSL is installed on the OS"
                },
                "authority": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The authority ('wsl+distro') that is used"
                }
            },
            "ms-vscode-remote.remote-wsl/recommendation": {
                "owner": "aeschli",
                "comment": "Tracks the use of recommendations",
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which recommendatiomn: 'reopenInWSL' | 'useWSL2' | 'useWSL2FileSystem'"
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What the user did with the notification: 'open' | 'hide' | 'show' | 'close'"
                }
            },
            "ms-vscode-remote.remote-wsl/dialog": {
                "owner": "aeschli",
                "comment": "Tracks the use of dialogs",
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which dialog: 'wslNotInstalled'"
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What the user did with the dialog: 'open' | 'install' | 'show' | 'close'"
                }
            }
        },
        "commonProperties": {}
    },
    "vscode-core": {
        "events": {
            "extensionGallery:install": {
                "owner": "sandy081",
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "durationsinceupdate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "errorcode": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "recommendationreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "galleryid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publishername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isprereleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "dependencies": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "querysource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "extensionGallery:uninstall": {
                "owner": "sandy081",
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "errorcode": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "galleryid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publishername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isprereleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "dependencies": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "querysource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "extensionGallery:update": {
                "owner": "sandy081",
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "errorcode": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "galleryid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publishername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isprereleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "dependencies": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "querysource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "galleryService:downloadVSIX": {
                "owner": "sandy081",
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "galleryid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publishername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isprereleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "dependencies": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "querysource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "workspce.tags": {
                "owner": "lramos15",
                "workbench.filestoopenorcreate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workbench.filestodiff": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workbench.filestomerge": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "workspace.roots": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.empty": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.grunt": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gulp": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.jake": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.tsconfig": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.jsconfig": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.config.xml": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.vsc.extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.asp<NUMBER>": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.sln": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.unity": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.express": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.sails": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.koa": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.hapi": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.socket.io": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.restify": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.next": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.nuxt": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@nestjs/core": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.strapi": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.gatsby": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.rnpm-plugin-windows": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.react": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@angular/core": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.vue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.aws-sdk": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.aws-amplify-sdk": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/ai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cosmos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/event": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/identity": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/keyvault": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/search": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/storage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.azure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.azure-storage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@google-cloud/common": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.firebase": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.heroku-cli": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@microsoft/teams-js": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@microsoft/office-js": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@microsoft/office-js-helpers": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@types/office-js": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@types/office-runtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.office-ui-fabric-react": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@uifabric/icons": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@uifabric/merge-styles": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@uifabric/styling": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@uifabric/experiments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@uifabric/utilities": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@microsoft/rush": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.lerna": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.just-task": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.beachball": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.electron": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.playwright": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.playwright-cli": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@playwright/test": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.playwright-core": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.playwright-chromium": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.playwright-firefox": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.playwright-webkit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.cypress": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.nightwatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.protractor": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.puppeteer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.selenium-webdriver": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.webdriverio": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.gherkin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/app-configuration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cosmos-sign": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cosmos-language-service": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/synapse-spark": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/synapse-monitoring": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/synapse-managed-private-endpoints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/synapse-artifacts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/synapse-access-control": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/ai-metrics-advisor": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/service-bus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/keyvault-secrets": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/keyvault-keys": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/keyvault-certificates": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/keyvault-admin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/digital-twins-core": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cognitiveservices-anomalydetector": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/ai-anomaly-detector": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-xml": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-tracing": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-paging": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-https": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-client": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-asynciterator-polyfill": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-arm": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/amqp-common": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-lro": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/logger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-http": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-auth": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-amqp": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/abort-controller": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/eventgrid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/storage-file-datalake": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/search-documents": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/storage-file": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/storage-datalake": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/storage-queue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/storage-file-share": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/storage-blob-changefeed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/storage-blob": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cognitiveservices-formrecognizer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/ai-form-recognizer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cognitiveservices-textanalytics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/ai-text-analytics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/event-processor-host": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/schema-registry-avro": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/schema-registry": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/eventhubs-checkpointstore-blob": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/event-hubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/communication-signaling": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/communication-calling": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/communication-sms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/communication-common": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/communication-chat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/communication-administration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/attestation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/data-tables": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.react-native-macos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.react-native-windows": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.bower": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.yeoman.code.ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.cordova.high": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.cordova.low": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.xamarin.android": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.xamarin.ios": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.android.cpp": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.reactnative": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.ionic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": "true"
                },
                "workspace.nativescript": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": "true"
                },
                "workspace.java.pom": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.java.gradle": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.java.android": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.javaee": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.jdbc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.jpa": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.lombok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.mockito": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.redis": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.springboot": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.sql": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.unittest": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.javaee": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.jdbc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.jpa": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.lombok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.mockito": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.redis": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.springboot": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.sql": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.unittest": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.requirements": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.requirements.star": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.pipfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.conda": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.any-azure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.pulumi-azure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-core": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cosmos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-devtools": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-elasticluster": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-event": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-eventgrid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-functions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-graphrbac": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-identity": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-iothub-device-client": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-keyvault": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-loganalytics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ml": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-monitor": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-search": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-servicebus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-servicefabric": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-shell": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-translator": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.adal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.pydocumentdb": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.botbuilder-core": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.botbuilder-schema": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.botframework-connector": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.playwright": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-synapse-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-synapse-spark": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-synapse-artifacts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-synapse-accesscontrol": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-synapse": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-vision-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-search-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-language-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-knowledge-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-metricsadvisor": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azureml-sdk": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-keyvault-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-keyvault-secrets": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-keyvault-keys": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-keyvault-certificates": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-keyvault-administration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-digitaltwins-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-digitaltwins-core": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-anomalydetector": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-anomalydetector": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-applicationinsights": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-core-tracing-opentelemetry": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-core-tracing-opencensus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-common": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage-file-datalake": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-search-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-search-documents": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage-file": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage-common": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage-queue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage-file-share": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage-blob-changefeed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage-blob": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-formrecognizer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-formrecognizer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-language-textanalytics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-textanalytics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-schemaregistry-avroserializer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-schemaregistry": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-eventhub-checkpointstoreblob-aio": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-eventhub-checkpointstoreblob": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-eventhub": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-communication-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-communication-sms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-communication-chat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-communication-administration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-security-attestation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-data-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-data-tables": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "workspace.remotes": {
                "owner": "lramos15",
                "domains": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "workspace.azure": {
                "owner": "lramos15",
                "node": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "java": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "extensionGallery:install:recommendations": {
                "owner": "sandy081",
                "recommendationreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "galleryid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publishername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isprereleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "dependencies": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "querysource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "extension:enable": {
                "owner": "sandy081",
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "galleryid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publishername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isprereleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "dependencies": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "querysource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "extension:disable": {
                "owner": "sandy081",
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "galleryid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publishername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isprereleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "dependencies": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "querysource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "extensionGallery:openExtension": {
                "owner": "sandy081",
                "recommendationreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "galleryid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publishername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isprereleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "dependencies": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "querysource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "terminalLatencyStats": {
                "owner": "Tyriar",
                "min": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "max": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "median": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "predictionaccuracy": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "remoteExtensionRecommendations:popup": {
                "owner": "sandy081",
                "userreaction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "startupTimeVaried": {
                "owner": "jrieken",
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "ellapsed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "islatestversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "didusecacheddata": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "windowkind": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "windowcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "viewletid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "panelid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "editorids": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timers.ellapsedappready": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsednlsgeneration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedloadmainbundle": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedcrashreporter": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedmainserver": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedwindowcreate": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedwindowload": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedwindowloadtorequire": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedwaitforwindowconfig": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedstorageinit": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedworkspaceserviceinit": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedsharedprocesconnected": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedrequireduserdatainit": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedotheruserdatainit": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedrequire": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedextensions": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedextensionsready": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedviewletrestore": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedpanelrestore": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsededitorrestore": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedworkbench": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "platform": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "release": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "arch": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "totalmem": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "freemem": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "cpus.count": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "cpus.speed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "cpus.model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "initialstartup": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "hasaccessibilitysupport": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "isvmlikelyhood": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "emptyworkbench": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "loadavg": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "meminfo.workingsetsize": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "meminfo.privatebytes": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "meminfo.sharedbytes": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "taskService.engineVersion": {
                "owner": "alexr00",
                "comment": "The engine version of tasks. Used to determine if a user is using a deprecated version.",
                "executionengineversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The engine version of tasks.",
                    "endPoint": "none"
                }
            },
            "debug/didViewMemory": {
                "owner": "connor4312",
                "debugtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "debugSessionStart": {
                "owner": "connor4312",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "breakpointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "exceptionbreakpoints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "watchexpressionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "extensionname": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isbuiltin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "launchjsonexists": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "debugSessionStop": {
                "owner": "connor4312",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "sessionlengthinseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "breakpointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "watchexpressionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "watermark:open": {
                "owner": "digitarald"
            },
            "languagePackSuggestion:popup": {
                "owner": "TylerLeonhardt",
                "userreaction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "cesSurvey:popup": {
                "owner": "digitarald",
                "userreaction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "cesSurvey:schedule": {
                "owner": "digitarald"
            },
            "query-expfeature": {
                "owner": "sbatten",
                "comment": "Logs queries to the experiment service by feature for metric calculations",
                "abexp.queriedfeature": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The experimental feature being queried",
                    "endPoint": "none"
                }
            },
            "searchResultsFirstRender": {
                "owner": "roblourens",
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "searchResultsFinished": {
                "owner": "roblourens",
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "searchResultsShown": {
                "owner": "roblourens",
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "filecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "searchontypeenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "options.pattern": {
                    "classification": "CustomerContent",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "options.isregexp": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "options.iswordmatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "options.wordseparators": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "options.ismultiline": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "options.iscasesensitive": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "options.issmartcase": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "editorOpened": {
                "owner": "bpasero",
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "typeid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "resource.mimetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "resource.scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "resource.ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "resource.path": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "editorClosed": {
                "owner": "bpasero",
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "typeid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "resource.mimetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "resource.scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "resource.ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "resource.path": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "workbenchActionExecuted": {
                "owner": "bpasero",
                "comment": "TODO @bpasero",
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of the action that was run.",
                    "endPoint": "none"
                },
                "from": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the component the action was run from.",
                    "endPoint": "none"
                }
            },
            "views.welcomeAction": {
                "owner": "joaomoreno",
                "viewid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The view ID in which the welcome view button was clicked.",
                    "endPoint": "none"
                },
                "uri": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The URI of the command ran by the result of clicking the button.",
                    "endPoint": "none"
                },
                "comment": "This is used to know when users click on the welcome view buttons."
            },
            "Extension:ViewActivate": {
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the extension",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the view",
                    "endPoint": "none"
                },
                "owner": "digitarald",
                "comment": "Helps to gain insights on what extension contributed views are most popular"
            },
            "notification:show": {
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of the source of the notification.",
                    "endPoint": "none"
                },
                "silent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the notification is silent or not.",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the notification.",
                    "endPoint": "none"
                },
                "owner": "bpasero",
                "comment": "Helps us gain insights to what notifications are being shown, how many, and if they are silent or not."
            },
            "notification:close": {
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of the source of the notification.",
                    "endPoint": "none"
                },
                "silent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the notification is silent or not.",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the notification.",
                    "endPoint": "none"
                },
                "owner": "bpasero",
                "comment": "Helps us gain insights to what notifications are being shown, how many, and if they are silent or not."
            },
            "notification:hide": {
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of the source of the notification.",
                    "endPoint": "none"
                },
                "silent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the notification is silent or not.",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the notification.",
                    "endPoint": "none"
                },
                "owner": "bpasero",
                "comment": "Helps us gain insights to what notifications are being shown, how many, and if they are silent or not."
            },
            "notification:actionExecuted": {
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of the action that was run from a notification.",
                    "endPoint": "none"
                },
                "actionlabel": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The label of the action that was run from a notification.",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the notification where an action was run.",
                    "endPoint": "none"
                },
                "silent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the notification where an action was run is silent or not.",
                    "endPoint": "none"
                },
                "owner": "bpasero",
                "comment": "Tracks when actions are fired from notifcations and how they were fired."
            },
            "automaticlanguagedetection.likelywrong": {
                "owner": "TylerLeonhardt,JacksonKearl",
                "comment": "Used to determine how often language detection is likely wrong.",
                "currentlanguageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language id we guessed.",
                    "endPoint": "none"
                },
                "nextlanguageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language id the user chose.",
                    "endPoint": "none"
                },
                "linecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The number of lines in the file.",
                    "endPoint": "none"
                },
                "modelpreference": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What the user's model preference is.",
                    "endPoint": "none"
                }
            },
            "setUntitledDocumentLanguage": {
                "owner": "TylerLeonhardt",
                "comment": "Helps understand what the automatic language detection does for untitled files",
                "to": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "TylerLeonhardt",
                    "comment": "Help understand effectiveness of automatic language detection",
                    "endPoint": "none"
                },
                "from": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "TylerLeonhardt",
                    "comment": "Help understand effectiveness of automatic language detection",
                    "endPoint": "none"
                },
                "modelpreference": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "TylerLeonhardt",
                    "comment": "Help understand effectiveness of automatic language detection",
                    "endPoint": "none"
                }
            },
            "workbenchEditorReopen": {
                "owner": "rebornix",
                "comment": "Identify how a document is reopened",
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File system provider scheme for the resource",
                    "endPoint": "none"
                },
                "ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File extension for the resource",
                    "endPoint": "none"
                },
                "from": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The editor view type the resource is switched from",
                    "endPoint": "none"
                },
                "to": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The editor view type the resource is switched to",
                    "endPoint": "none"
                }
            },
            "activityBarAction": {
                "owner": "sbatten",
                "comment": "Event logged when an activity bar action is triggered.",
                "viewletid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The view in the activity bar for which the action was performed.",
                    "endPoint": "none"
                },
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The action that was performed. e.g. \\\"hide\\\", \\\"show\\\", or \\\"refocus\\\"",
                    "endPoint": "none"
                }
            },
            "suggest.durations.json": {
                "owner": "jrieken",
                "comment": "Completions performance numbers",
                "data": {
                    "comment": "Durations per source and overall",
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                }
            },
            "suggest.acceptedSuggestion": {
                "owner": "jrieken",
                "comment": "Information accepting completion items",
                "providerid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "Provider of the completions item",
                    "endPoint": "none"
                },
                "basenamehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the basename of the file into which the completion was inserted",
                    "endPoint": "none"
                },
                "fileextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File extension of the file into which the completion was inserted",
                    "endPoint": "none"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language type of the file into which the completion was inserted",
                    "endPoint": "none"
                },
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The completion item kind",
                    "endPoint": "none"
                }
            },
            "codeAction.applyCodeAction": {
                "codeactionfrom": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The kind of action used to opened the code action.",
                    "endPoint": "none"
                },
                "validcodeactions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The total number of valid actions that are highlighted and can be used.",
                    "endPoint": "none"
                },
                "cancelled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The indicator if the menu was selected or cancelled.",
                    "endPoint": "none"
                },
                "owner": "mjbvz",
                "comment": "Event used to gain insights into which code actions are being triggered",
                "codeactiontitle": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The display label of the applied code action",
                    "endPoint": "none"
                },
                "codeactionkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The kind (refactor, quickfix) of the applied code action",
                    "endPoint": "none"
                },
                "codeactionispreferred": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Was the code action marked as being a preferred action?",
                    "endPoint": "none"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The kind of action used to trigger apply code action.",
                    "endPoint": "none"
                }
            },
            "sync/successiveAuthFailures": {
                "owner": "sandy081",
                "comment": "Report when there are successive auth failures during settings sync"
            },
            "tasClientReadTreatmentComplete": {
                "owner": "sbatten",
                "comment": "Logged when a treatment value is read from the experiment service",
                "treatmentvalue": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The value of the read treatment",
                    "endPoint": "none"
                },
                "treatmentname": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the treatment that was read",
                    "endPoint": "none"
                }
            },
            "activatePlugin": {
                "owner": "jrieken",
                "comment": "Data about how/why an extension was activated",
                "id": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of an extension",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the extension",
                    "endPoint": "none"
                },
                "isbuiltin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "If the extension is builtin or git installed",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The publisher of the extension",
                    "endPoint": "none"
                },
                "themeid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the theme that triggered the first extension use.",
                    "endPoint": "none"
                },
                "extensionversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The version of the extension",
                    "endPoint": "none"
                },
                "activationevents": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "All activation events of the extension",
                    "endPoint": "none"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The activation event",
                    "endPoint": "none"
                },
                "reasonid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of the activation event",
                    "endPoint": "none"
                }
            },
            "cachedSearchComplete": {
                "owner": "roblourens",
                "comment": "Fired when a file search is completed from previously cached results",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Indicates which extension or UI feature triggered this search",
                    "endPoint": "none"
                },
                "resultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The number of search results",
                    "endPoint": "none"
                },
                "workspacefoldercount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The number of folders in the workspace",
                    "endPoint": "none"
                },
                "endtoendtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The total search time",
                    "endPoint": "none"
                },
                "sortingtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The amount of time spent sorting results",
                    "endPoint": "none"
                },
                "cachewasresolved": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the cache was already resolved when the search began",
                    "endPoint": "none"
                },
                "cachelookuptime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The amount of time spent looking up the cache to use for the search",
                    "endPoint": "none"
                },
                "cachefiltertime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The amount of time spent searching within the cache",
                    "endPoint": "none"
                },
                "cacheentrycount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The number of entries in the searched-in cache",
                    "endPoint": "none"
                },
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The uri scheme of the folder searched in",
                    "endPoint": "none"
                }
            },
            "searchComplete": {
                "owner": "roblourens",
                "comment": "Fired when a file search is completed",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Indicates which extension or UI feature triggered this search",
                    "endPoint": "none"
                },
                "resultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The number of search results",
                    "endPoint": "none"
                },
                "workspacefoldercount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The number of folders in the workspace",
                    "endPoint": "none"
                },
                "endtoendtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The total search time",
                    "endPoint": "none"
                },
                "sortingtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The amount of time spent sorting results",
                    "endPoint": "none"
                },
                "filewalktime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The amount of time spent walking file system",
                    "endPoint": "none"
                },
                "directorieswalked": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The number of directories walked",
                    "endPoint": "none"
                },
                "fileswalked": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The number of files walked",
                    "endPoint": "none"
                },
                "cmdtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The amount of time spent running the search command",
                    "endPoint": "none"
                },
                "cmdresultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The number of results returned from the search command",
                    "endPoint": "none"
                },
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The uri scheme of the folder searched in",
                    "endPoint": "none"
                }
            },
            "textSearchComplete": {
                "owner": "roblourens",
                "comment": "Fired when a text search is completed",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Indicates which extension or UI feature triggered this search",
                    "endPoint": "none"
                },
                "workspacefoldercount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The number of folders in the workspace",
                    "endPoint": "none"
                },
                "endtoendtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The total search time",
                    "endPoint": "none"
                },
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The uri scheme of the folder searched in",
                    "endPoint": "none"
                },
                "error": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The type of the error, if any",
                    "endPoint": "none"
                }
            },
            "override.viewType": {
                "viewtype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the editor opened. Used to gain an understanding of what editors are most popular",
                    "endPoint": "none"
                },
                "owner": "lramos15",
                "comment": "An event that fires when an editor type is picked"
            },
            "viewDescriptorService.moveViews": {
                "owner": "sbatten",
                "comment": "Logged when views are moved from one view container to another",
                "viewcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of views moved",
                    "endPoint": "none"
                },
                "fromcontainer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The starting view container of the moved views",
                    "endPoint": "none"
                },
                "tocontainer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The destination view container of the moved views",
                    "endPoint": "none"
                },
                "fromlocation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location of the starting view container. e.g. Primary Side Bar",
                    "endPoint": "none"
                },
                "tolocation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location of the destination view container. e.g. Panel",
                    "endPoint": "none"
                }
            },
            "startup.timer.mark": {
                "owner": "jrieken",
                "comment": "Information about a performance marker",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Where this marker was generated, e.g main, renderer, extension host",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of this marker (as defined in source code)",
                    "endPoint": "none"
                },
                "relativestarttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The duration between the previous and this marker",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The absolute timestamp (unix time)",
                    "endPoint": "none"
                }
            },
            "extensionHostStartup": {
                "owner": "alexdima",
                "comment": "The startup state of the extension host",
                "time": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The time reported by Date.now().",
                    "endPoint": "none"
                },
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The action: starting, success or error.",
                    "endPoint": "none"
                },
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The extension host kind: LocalProcess, LocalWebWorker or Remote.",
                    "endPoint": "none"
                },
                "errorname": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The error name.",
                    "endPoint": "none"
                },
                "errormessage": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The error message.",
                    "endPoint": "none"
                },
                "errorstack": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The error stack.",
                    "endPoint": "none"
                }
            },
            "extensionsMessage": {
                "owner": "alexdima",
                "comment": "A validation message for an extension",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Severity of problem.",
                    "isMeasurement": true,
                    "endPoint": "none"
                },
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the extension that has a problem.",
                    "endPoint": "none"
                },
                "extensionpointid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The extension point that has a problem.",
                    "endPoint": "none"
                },
                "message": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The message of the problem.",
                    "endPoint": "none"
                }
            },
            "extensionActivationError": {
                "owner": "alexdima",
                "comment": "An extension failed to activate",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the extension.",
                    "endPoint": "none"
                },
                "error": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The error message.",
                    "endPoint": "none"
                }
            },
            "uri_invoked/start": {
                "owner": "joaomoreno",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the extension that should handle the URI",
                    "endPoint": "none"
                },
                "comment": "This is used to understand the drop funnel of extension URI handling by the OS & VS Code."
            },
            "uri_invoked/cancel": {
                "owner": "joaomoreno",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the extension that should handle the URI",
                    "endPoint": "none"
                },
                "comment": "This is used to understand the drop funnel of extension URI handling by the OS & VS Code."
            },
            "uri_invoked/end": {
                "owner": "joaomoreno",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the extension that should handle the URI",
                    "endPoint": "none"
                },
                "comment": "This is used to understand the drop funnel of extension URI handling by the OS & VS Code."
            },
            "uri_invoked/install_extension/start": {
                "owner": "joaomoreno",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the extension that should handle the URI",
                    "endPoint": "none"
                },
                "comment": "This is used to understand the drop funnel of extension URI handling by the OS & VS Code."
            },
            "uri_invoked/install_extension/cancel": {
                "owner": "joaomoreno",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the extension that should handle the URI",
                    "endPoint": "none"
                },
                "comment": "This is used to understand the drop funnel of extension URI handling by the OS & VS Code."
            },
            "uri_invoked/install_extension/accept": {
                "owner": "joaomoreno",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the extension that should handle the URI",
                    "endPoint": "none"
                },
                "comment": "This is used to understand the drop funnel of extension URI handling by the OS & VS Code."
            },
            "uri_invoked/enable_extension/start": {
                "owner": "joaomoreno",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the extension that should handle the URI",
                    "endPoint": "none"
                },
                "comment": "This is used to understand the drop funnel of extension URI handling by the OS & VS Code."
            },
            "uri_invoked/enable_extension/cancel": {
                "owner": "joaomoreno",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the extension that should handle the URI",
                    "endPoint": "none"
                },
                "comment": "This is used to understand the drop funnel of extension URI handling by the OS & VS Code."
            },
            "uri_invoked/enable_extension/accept": {
                "owner": "joaomoreno",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the extension that should handle the URI",
                    "endPoint": "none"
                },
                "comment": "This is used to understand the drop funnel of extension URI handling by the OS & VS Code."
            },
            "uri_invoked/activate_extension/start": {
                "owner": "joaomoreno",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the extension that should handle the URI",
                    "endPoint": "none"
                },
                "comment": "This is used to understand the drop funnel of extension URI handling by the OS & VS Code."
            },
            "uri_invoked/activate_extension/cancel": {
                "owner": "joaomoreno",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the extension that should handle the URI",
                    "endPoint": "none"
                },
                "comment": "This is used to understand the drop funnel of extension URI handling by the OS & VS Code."
            },
            "uri_invoked/activate_extension/accept": {
                "owner": "joaomoreno",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the extension that should handle the URI",
                    "endPoint": "none"
                },
                "comment": "This is used to understand the drop funnel of extension URI handling by the OS & VS Code."
            },
            "extensionHostCrash": {
                "owner": "alexdima",
                "comment": "The extension host has terminated unexpectedly",
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The exit code of the extension host process.",
                    "endPoint": "none"
                },
                "signal": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The signal that caused the extension host process to exit.",
                    "endPoint": "none"
                },
                "extensionids": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The list of loaded extensions.",
                    "endPoint": "none"
                }
            },
            "extensionHostCrashExtension": {
                "owner": "alexdima",
                "comment": "The extension host has terminated unexpectedly",
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The exit code of the extension host process.",
                    "endPoint": "none"
                },
                "signal": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The signal that caused the extension host process to exit.",
                    "endPoint": "none"
                },
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the extension.",
                    "endPoint": "none"
                }
            },
            "automaticlanguagedetection.stats": {
                "owner": "TylerLeonhardt,JacksonKearl",
                "comment": "Used to determine how definitive language detection is and how long it takes.",
                "languages": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The languages the model supports.",
                    "endPoint": "none"
                },
                "confidences": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The confidences of those languages.",
                    "endPoint": "none"
                },
                "timespent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How long the operation took.",
                    "endPoint": "none"
                }
            },
            "automaticlanguagedetection.perf": {
                "owner": "TylerLeonhardt",
                "comment": "Helps understand how effective language detection and how long it takes to run",
                "timespent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The time it took to run language detection",
                    "endPoint": "none"
                },
                "detection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language that was detected",
                    "endPoint": "none"
                }
            },
            "accessibility": {
                "owner": "isidorn",
                "comment": "Helps gain an understanding of when accessibility features are being used",
                "enabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether or not accessibility features are enabled",
                    "endPoint": "none"
                }
            },
            "formatterpick": {
                "owner": "jrieken",
                "comment": "Information about resolving formatter conflicts",
                "mode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Formatting mode: whole document or a range/selection",
                    "endPoint": "none"
                },
                "extensions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension that got picked",
                    "endPoint": "none"
                },
                "pick": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The possible extensions to pick",
                    "endPoint": "none"
                }
            },
            "sync/handleConflicts": {
                "owner": "sandy081",
                "comment": "Response information when conflict happens during settings sync",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "settings sync resource. eg., settings, keybindings...",
                    "endPoint": "none"
                },
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "action taken while resolving conflicts. Eg: acceptLocal, acceptRemote",
                    "endPoint": "none"
                }
            },
            "sync/showConflicts": {
                "owner": "sandy081",
                "comment": "Response information when conflict happens during settings sync",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "settings sync resource. eg., settings, keybindings...",
                    "endPoint": "none"
                },
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "action taken while resolving conflicts. Eg: acceptLocal, acceptRemote",
                    "endPoint": "none"
                }
            },
            "bracketPairColorizer2Usage": {
                "owner": "hediet",
                "nativecolorizationenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether or not built-in bracket pair colorization is being used",
                    "endPoint": "none"
                },
                "comment": "We use this to understand how many users have the bracket pair colorizer extension installed (and how many of them have native bracket pair colorization enabled), as the extension does not do anything if native bracket pair colorization is enabled."
            },
            "workspaceLoad": {
                "owner": "bpasero",
                "useragent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The user agent as reported by `navigator.userAgent` by Electron or the web browser.",
                    "endPoint": "none"
                },
                "emptyworkbench": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Whether a folder or workspace is opened or not.",
                    "endPoint": "none"
                },
                "windowsize.innerheight": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The size of the window.",
                    "endPoint": "none",
                    "owner": "bpasero"
                },
                "windowsize.innerwidth": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The size of the window.",
                    "endPoint": "none",
                    "owner": "bpasero"
                },
                "windowsize.outerheight": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The size of the window.",
                    "endPoint": "none",
                    "owner": "bpasero"
                },
                "windowsize.outerwidth": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The size of the window.",
                    "endPoint": "none",
                    "owner": "bpasero"
                },
                "workbench.filestoopenorcreate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Number of files that should open or be created.",
                    "endPoint": "none"
                },
                "workbench.filestodiff": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Number of files that should be compared.",
                    "endPoint": "none"
                },
                "workbench.filestomerge": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Number of files that should be merged.",
                    "endPoint": "none"
                },
                "customkeybindingscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Number of custom keybindings",
                    "endPoint": "none"
                },
                "theme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current theme of the window.",
                    "endPoint": "none"
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "BusinessInsight",
                    "comment": "The display language of the window.",
                    "endPoint": "none"
                },
                "pinnedviewlets": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifiers of views that are pinned.",
                    "endPoint": "none"
                },
                "restoredviewlet": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of the view that is restored.",
                    "endPoint": "none"
                },
                "restorededitors": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The number of editors that restored.",
                    "endPoint": "none"
                },
                "startupkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "How the window was opened, e.g via reload or not.",
                    "endPoint": "none"
                },
                "comment": "Metadata around the workspace that is being loaded into a window."
            },
            "settingsRead": {
                "owner": "bpasero",
                "settingstype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of the settings file that was read.",
                    "endPoint": "none"
                },
                "comment": "Track when a settings file was read, for example from an editor."
            },
            "fileGet": {
                "owner": "bpasero",
                "comment": "Track when a file was read, for example from an editor.",
                "mimetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language type of the file (for example XML).",
                    "endPoint": "none"
                },
                "ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The file extension of the file (for example xml).",
                    "endPoint": "none"
                },
                "path": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The path of the file as a hash.",
                    "endPoint": "none"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The reason why a file is read or written. Allows to e.g. distinguish auto save from normal save.",
                    "endPoint": "none"
                },
                "allowlistedjson": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the file but only if it matches some well known file names such as package.json or tsconfig.json.",
                    "endPoint": "none"
                }
            },
            "settingsWritten": {
                "owner": "bpasero",
                "settingstype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of the settings file that was written to.",
                    "endPoint": "none"
                },
                "comment": "Track when a settings file was written to, for example from an editor."
            },
            "filePUT": {
                "owner": "bpasero",
                "comment": "Track when a file was written to, for example from an editor.",
                "mimetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language type of the file (for example XML).",
                    "endPoint": "none"
                },
                "ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The file extension of the file (for example xml).",
                    "endPoint": "none"
                },
                "path": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The path of the file as a hash.",
                    "endPoint": "none"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The reason why a file is read or written. Allows to e.g. distinguish auto save from normal save.",
                    "endPoint": "none"
                },
                "allowlistedjson": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the file but only if it matches some well known file names such as package.json or tsconfig.json.",
                    "endPoint": "none"
                }
            },
            "searchEditor/saveSearchResults": {
                "owner": "roblourens",
                "comment": "Fired when a search editor is saved"
            },
            "searchEditor/openNewSearchEditor": {
                "owner": "roblourens",
                "comment": "Fired when a search editor is opened"
            },
            "searchEditor/createEditorFromSearchResult": {
                "owner": "roblourens",
                "comment": "Fired when a search editor is opened from the search view"
            },
            "editSessions.continue.resume": {
                "owner": "joyceerhl",
                "comment": "Reporting when an action is resumed from an edit session identifier."
            },
            "editSessions.continue.store": {
                "owner": "joyceerhl",
                "comment": "Reporting when the continue edit session action is run."
            },
            "editSessions.resume": {
                "owner": "joyceerhl",
                "comment": "Reporting when the resume edit session action is invoked."
            },
            "editSessions.store": {
                "owner": "joyceerhl",
                "comment": "Reporting when the store edit session action is invoked."
            },
            "editSessions.upload.failed": {
                "owner": "joyceerhl",
                "comment": "Reporting when Continue On server request fails.",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The reason that the server request failed.",
                    "endPoint": "none"
                }
            },
            "exthostunresponsive": {
                "owner": "jrieken",
                "comment": "Profiling data that was collected while the extension host was unresponsive",
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "Duration for which the extension host was unresponsive",
                    "endPoint": "none"
                },
                "data": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Extensions ids and core parts that were active while the extension host was frozen",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Top extensions id that took most of the duration",
                    "endPoint": "none"
                }
            },
            "exthostunresponsiveprompt": {
                "owner": "digitarald",
                "comment": "Users got a warning about an extension hanging the extension process",
                "expiration": "1.73",
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Extension id that froze the extension process",
                    "endPoint": "none"
                }
            },
            "fileExtensionSuggestion:popup": {
                "owner": "sandy081",
                "comment": "Response information when a file based reccommendation is suggested",
                "userreaction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "User reaction after showing the recommendation prompt. Eg., install, cancel, show, neverShowAgain",
                    "endPoint": "none"
                },
                "fileextension": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "Extension of the file for which an extension is being recommended.",
                    "endPoint": "none"
                }
            },
            "installedExtensions": {
                "owner": "digitarald",
                "comment": "Helps to understand which extensions are the most actively used.",
                "extensionids": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The list of extension ids that are installed.",
                    "endPoint": "none"
                },
                "count": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of extensions that are installed.",
                    "endPoint": "none"
                }
            },
            "extensionsAction.sponsorExtension": {
                "owner": "sandy081",
                "comment": "Reporting when sponosor extension action is executed",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the extension to be sponsored",
                    "endPoint": "none"
                }
            },
            "extensionsView:MarketplaceSearchFinished": {},
            "extensionsRecommendations:ignoreRecommendation": {
                "owner": "sandy081",
                "comment": "Report when a recommendation is ignored",
                "recommendationreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Reason why extension is recommended",
                    "endPoint": "none"
                },
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the extension recommendation that is being ignored",
                    "endPoint": "none"
                }
            },
            "extensionRecommendations:popup": {
                "owner": "sandy081",
                "comment": "Response information when an extension is recommended",
                "userreaction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "User reaction after showing the recommendation prompt. Eg., install, cancel, show, neverShowAgain",
                    "endPoint": "none"
                },
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the extension that is recommended",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from which this recommendation is coming from. Eg., file, exe.,",
                    "endPoint": "none"
                }
            },
            "extensionWorkspaceRecommendations:popup": {
                "owner": "sandy081",
                "comment": "Response information when a recommendation from workspace is recommended",
                "userreaction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "User reaction after showing the recommendation prompt. Eg., install, cancel, show, neverShowAgain",
                    "endPoint": "none"
                }
            },
            "dynamicWorkspaceRecommendations": {
                "owner": "sandy081",
                "comment": "Information about recommendations by scanning the workspace",
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Total number of extensions those are recommended",
                    "endPoint": "none"
                },
                "cache": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Flag if extensions are recommended from cache or not",
                    "endPoint": "none"
                }
            },
            "gettingStarted.didAutoOpenWalkthrough": {
                "owner": "lramos15",
                "comment": "When a walkthrthrough is opened upon extension installation",
                "id": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "lramos15",
                    "comment": "Used to understand what walkthroughs are consulted most frequently",
                    "endPoint": "none"
                }
            },
            "gettingStarted.ActionExecuted": {
                "command": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The command being executed on the getting started page.",
                    "endPoint": "none"
                },
                "walkthroughid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The walkthrough which the command is in",
                    "endPoint": "none"
                },
                "argument": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The arguments being passed to the command",
                    "endPoint": "none"
                },
                "owner": "lramos15",
                "comment": "Help understand what actions are most commonly taken on the getting started page"
            },
            "webviewMissingCsp": {
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the extension that created the webview.",
                    "endPoint": "none"
                },
                "owner": "mjbz",
                "comment": "Helps find which extensions are contributing webviews with invalid CSPs"
            },
            "experiments": {
                "owner": "sbatten",
                "comment": "Information about the experiments in this session",
                "experiments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The list of experiments in this session",
                    "endPoint": "none"
                }
            },
            "remoteConnectionSuccess": {
                "owner": "alexdima",
                "comment": "The initial connection succeeded",
                "web": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Is web ui.",
                    "endPoint": "none"
                },
                "connectiontimems": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time, in ms, until connected",
                    "isMeasurement": true,
                    "endPoint": "none"
                },
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the resolver.",
                    "endPoint": "none"
                }
            },
            "remoteConnectionFailure": {
                "owner": "alexdima",
                "comment": "The initial connection failed",
                "web": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Is web ui.",
                    "endPoint": "none"
                },
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the resolver.",
                    "endPoint": "none"
                },
                "connectiontimems": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time, in ms, until connection failure",
                    "isMeasurement": true,
                    "endPoint": "none"
                },
                "message": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error message",
                    "endPoint": "none"
                }
            },
            "remoteConnectionLatency": {
                "owner": "connor4312",
                "comment": "The latency to the remote extension host",
                "web": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether this is running on web",
                    "endPoint": "none"
                },
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Anonymized remote name",
                    "endPoint": "none"
                },
                "latencyms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Latency to the remote, in milliseconds",
                    "isMeasurement": true,
                    "endPoint": "none"
                }
            },
            "settingsEditor.settingModified": {
                "key": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The setting that is being modified.",
                    "endPoint": "none"
                },
                "groupid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the setting is from the local search or remote search provider, if applicable.",
                    "endPoint": "none"
                },
                "nlpindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The index of the setting in the remote search provider results, if applicable.",
                    "endPoint": "none"
                },
                "displayindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The index of the setting in the combined search results, if applicable.",
                    "endPoint": "none"
                },
                "showconfiguredonly": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user is in the modified view, which shows configured settings only.",
                    "endPoint": "none"
                },
                "isreset": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Identifies whether a setting was reset to its default value.",
                    "endPoint": "none"
                },
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The scope of the setting, such as user or workspace.",
                    "endPoint": "none"
                },
                "owner": "rzhao271",
                "comment": "Event which fires when the user modifies a setting in the settings editor"
            },
            "settingsEditor.filter": {
                "durations.nlpresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "How long the remote search provider took, if applicable.",
                    "endPoint": "none"
                },
                "counts.nlpresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The number of matches found by the remote search provider, if applicable.",
                    "endPoint": "none"
                },
                "counts.filterresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The number of matches found by the local search provider, if applicable.",
                    "endPoint": "none"
                },
                "requestcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The number of requests sent to Bing, if applicable.",
                    "endPoint": "none"
                },
                "owner": "rzhao271",
                "comment": "Tracks the number of requests and performance of the built-in search providers"
            },
            "remoteReconnectionReload": {
                "owner": "alexdima",
                "comment": "The reload button in the builtin permanent reconnection failure dialog was pressed",
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the resolver.",
                    "endPoint": "none"
                },
                "reconnectiontoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the connection.",
                    "endPoint": "none"
                },
                "millissincelastincomingdata": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Elapsed time (in ms) since data was last received.",
                    "endPoint": "none"
                },
                "attempt": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The reconnection attempt counter.",
                    "endPoint": "none"
                }
            },
            "remoteConnectionLost": {
                "owner": "alexdima",
                "comment": "The remote connection state is now `ConnectionLost`",
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the resolver.",
                    "endPoint": "none"
                },
                "reconnectiontoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the connection.",
                    "endPoint": "none"
                }
            },
            "remoteReconnectionRunning": {
                "owner": "alexdima",
                "comment": "The remote connection state is now `ReconnectionRunning`",
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the resolver.",
                    "endPoint": "none"
                },
                "reconnectiontoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the connection.",
                    "endPoint": "none"
                },
                "millissincelastincomingdata": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Elapsed time (in ms) since data was last received.",
                    "endPoint": "none"
                },
                "attempt": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The reconnection attempt counter.",
                    "endPoint": "none"
                }
            },
            "remoteReconnectionPermanentFailure": {
                "owner": "alexdima",
                "comment": "The remote connection state is now `ReconnectionPermanentFailure`",
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the resolver.",
                    "endPoint": "none"
                },
                "reconnectiontoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the connection.",
                    "endPoint": "none"
                },
                "millissincelastincomingdata": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Elapsed time (in ms) since data was last received.",
                    "endPoint": "none"
                },
                "attempt": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The reconnection attempt counter.",
                    "endPoint": "none"
                },
                "handled": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The error was handled by the resolver.",
                    "endPoint": "none"
                }
            },
            "remoteConnectionGain": {
                "owner": "alexdima",
                "comment": "The remote connection state is now `ConnectionGain`",
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the resolver.",
                    "endPoint": "none"
                },
                "reconnectiontoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the connection.",
                    "endPoint": "none"
                },
                "millissincelastincomingdata": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Elapsed time (in ms) since data was last received.",
                    "endPoint": "none"
                },
                "attempt": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The reconnection attempt counter.",
                    "endPoint": "none"
                }
            },
            "terminal/shellIntegrationActivationFailureCustomArgs": {
                "owner": "meganrogge",
                "comment": "Indicates shell integration was not activated because of custom args"
            },
            "terminal/shellIntegrationFailureProcessExit": {
                "owner": "meganrogge",
                "comment": "Indicates the process exited when created with shell integration args"
            },
            "windowsEdition": {
                "owner": "sbatten",
                "comment": "Information about the Windows edition.",
                "edition": {
                    "classification": "SystemMetaData",
                    "purpose": "BusinessInsight",
                    "comment": "The Windows edition.",
                    "endPoint": "none"
                }
            },
            "workspaceTrustDisabled": {
                "owner": "sbatten",
                "comment": "Logged when workspace trust is disabled",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason workspace trust is disabled. e.g. cli or setting",
                    "endPoint": "none"
                }
            },
            "workspaceTrustFolderCounts": {
                "owner": "sbatten",
                "comment": "Information about the workspaces trusted on the machine",
                "trustedfolderscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The number of trusted folders on the machine",
                    "endPoint": "none"
                }
            },
            "workspaceTrustStateChanged": {
                "owner": "sbatten",
                "comment": "Logged when the workspace transitions between trusted and restricted modes",
                "workspaceid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "An id of the workspace",
                    "endPoint": "none"
                },
                "istrusted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "true if the workspace is trusted",
                    "endPoint": "none"
                }
            },
            "workspaceFolderDepthBelowTrustedFolder": {
                "owner": "sbatten",
                "comment": "Some metrics on the trusted workspaces folder structure",
                "trustedfolderdepth": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The number of directories deep of the trusted path",
                    "endPoint": "none"
                },
                "workspacefolderdepth": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The number of directories deep of the workspace path",
                    "endPoint": "none"
                },
                "delta": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The difference between the trusted path and the workspace path directories depth",
                    "endPoint": "none"
                }
            },
            "startup.resource.perf": {
                "owner": "jrieken",
                "comment": "Resource performance numbers",
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Resource name",
                    "endPoint": "none"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "Resource duration",
                    "endPoint": "none"
                }
            },
            "perf.freeze.events": {
                "owner": "jrieken",
                "comment": "Insight about what happened before/while a long task was reported",
                "sessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Session identifier that allows to correlate CPU samples and events",
                    "endPoint": "none"
                },
                "timestamp": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Unix time at which the long task approximately happened",
                    "endPoint": "none"
                },
                "recentcommands": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Events prior to the long task",
                    "endPoint": "none"
                },
                "views": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Visible views",
                    "endPoint": "none"
                },
                "editors": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Visible editor",
                    "endPoint": "none"
                }
            },
            "notebook/editorOpened": {
                "owner": "rebornix",
                "comment": "Identify the notebook editor view type",
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File system provider scheme for the resource",
                    "endPoint": "none"
                },
                "ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File extension for the resource",
                    "endPoint": "none"
                },
                "viewtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "View type of the notebook editor",
                    "endPoint": "none"
                }
            },
            "notebook/editorOpenPerf": {
                "owner": "rebornix",
                "comment": "The notebook file open metrics. Used to get a better understanding of the performance of notebook file opening",
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File system provider scheme for the notebook resource",
                    "endPoint": "none"
                },
                "ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File extension for the notebook resource",
                    "endPoint": "none"
                },
                "viewtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The view type of the notebook editor",
                    "endPoint": "none"
                },
                "extensionactivated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Extension activation time for the resource opening",
                    "endPoint": "none"
                },
                "inputloaded": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Editor Input loading time for the resource opening",
                    "endPoint": "none"
                },
                "webviewcommloaded": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Webview initialization time for the resource opening",
                    "endPoint": "none"
                },
                "custommarkdownloaded": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Custom markdown loading time for the resource opening",
                    "endPoint": "none"
                },
                "editorloaded": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Overall editor loading time for the resource opening",
                    "endPoint": "none"
                }
            },
            "terminal/shellIntegrationActivationSucceeded": {
                "owner": "meganrogge",
                "comment": "Indicates shell integration was activated"
            },
            "terminal/shellIntegrationActivationTimeout": {},
            "api/scm/createSourceControl": {
                "owner": "joaomoreno",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the extension contributing to the Source Control API.",
                    "endPoint": "none"
                },
                "comment": "This is used to know what extensions contribute to the Source Control API."
            },
            "shimming.keytar": {
                "owner": "jrieken",
                "comment": "Know when the keytar-shim was used",
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension is question",
                    "endPoint": "none"
                }
            },
            "shimming.open": {
                "owner": "jrieken",
                "comment": "Know when the open-shim was used",
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension is question",
                    "endPoint": "none"
                }
            },
            "shimming.open.call.noForward": {
                "owner": "jrieken",
                "comment": "Know when the open-shim was used",
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension is question",
                    "endPoint": "none"
                }
            },
            "extensionActivationTimes": {
                "owner": "jrieken",
                "comment": "Timestamps for extension activation",
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Did extension activation succeed or fail",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of an extension",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the extension",
                    "endPoint": "none"
                },
                "extensionversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The version of the extension",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The publisher of the extension",
                    "endPoint": "none"
                },
                "activationevents": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "All activation events of the extension",
                    "endPoint": "none"
                },
                "isbuiltin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "If the extension is builtin or git installed",
                    "endPoint": "none"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The activation event",
                    "endPoint": "none"
                },
                "reasonid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of the activation event",
                    "endPoint": "none"
                },
                "startup": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "Activation occurred during startup",
                    "endPoint": "none"
                },
                "codeloadingtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "Time it took to load the extension's code",
                    "endPoint": "none"
                },
                "activatecalltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "Time it took to call activate",
                    "endPoint": "none"
                },
                "activateresolvedtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "Time it took for async-activation to finish",
                    "endPoint": "none"
                }
            },
            "Extension:ActionExecuted": {
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the extension handling the command, informing which extensions provide most-used functionality.",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the command, to understand which specific extension features are most popular.",
                    "endPoint": "none"
                },
                "owner": "digitarald",
                "comment": "Used to gain insight on the most popular commands used from extensions"
            },
            "extHostDeprecatedApiUsage": {
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The id of the extension that is using the deprecated API",
                    "endPoint": "none"
                },
                "apiid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The id of the deprecated API",
                    "endPoint": "none"
                },
                "owner": "mjbvz",
                "comment": "Helps us gain insights on extensions using deprecated API so we can assist in migration to new API"
            },
            "webviews:createWebviewPanel": {
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the extension that created the webview panel",
                    "endPoint": "none"
                },
                "viewtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the webview",
                    "endPoint": "none"
                },
                "owner": "mjbvz",
                "comment": "Triggered when a webview is created. Records the type of webview and the extension which created it"
            },
            "authentication.providerUsage": {
                "owner": "TylerLeonhardt",
                "comment": "Used to see which extensions are using which providers",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension id.",
                    "endPoint": "none"
                },
                "providerid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The provider id.",
                    "endPoint": "none"
                }
            },
            "sync/error": {
                "owner": "sandy081",
                "comment": "Information about the error that occurred while syncing",
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "error code",
                    "endPoint": "none"
                },
                "service": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Settings Sync service for which this error has occurred",
                    "endPoint": "none"
                },
                "servercode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Settings Sync service error code",
                    "endPoint": "none"
                },
                "url": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Settings Sync resource URL for which this error has occurred",
                    "endPoint": "none"
                },
                "resource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Settings Sync resource for which this error has occurred",
                    "endPoint": "none"
                },
                "executionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Settings Sync execution id for which this error has occurred",
                    "endPoint": "none"
                }
            },
            "sync.enable": {
                "owner": "sandy081",
                "comment": "Reporting when Settings Sync is turned on or off",
                "enabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Flag indicating if settings sync is enabled or not",
                    "endPoint": "none"
                }
            },
            "sync/turnOffEveryWhere": {
                "owner": "sandy081",
                "comment": "Reporting when settings sync is turned off in all devices"
            },
            "autosync/error": {
                "owner": "sandy081",
                "comment": "Information about the error that causes auto sync to fail",
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "error code",
                    "endPoint": "none"
                },
                "service": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Settings sync service for which this error has occurred",
                    "endPoint": "none"
                }
            },
            "sync/triggered": {
                "owner": "sandy081",
                "comment": "Information about the sources triggering auto sync",
                "sources": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Source that triggered auto sync",
                    "endPoint": "none"
                }
            },
            "sync/incompatible": {
                "owner": "sandy081",
                "comment": "Information about the sync resource that is incompatible",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "settings sync resource. eg., settings, keybindings...",
                    "endPoint": "none"
                }
            },
            "updateConfiguration": {
                "owner": "lramos15, sbatten",
                "comment": "Event which fires when user updates telemetry configuration",
                "configurationsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What configuration file was updated i.e user or workspace",
                    "endPoint": "none"
                },
                "configurationkeys": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What configuration keys were updated",
                    "endPoint": "none"
                }
            },
            "windowerror": {
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The type of window error to understand the nature of the error better.",
                    "endPoint": "none"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The reason of the window error to understand the nature of the error better.",
                    "endPoint": "none"
                },
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The exit code of the window process to understand the nature of the error better",
                    "endPoint": "none"
                },
                "owner": "bpasero",
                "comment": "Provides insight into reasons the vscode window had an error."
            },
            "prof.sample": {
                "owner": "jrieken",
                "comment": "A callstack that took a long time to execute",
                "sessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Session identifier that allows to correlate samples from one profile",
                    "endPoint": "none"
                },
                "selftime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Self time of the sample",
                    "endPoint": "none"
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Total time of the sample",
                    "endPoint": "none"
                },
                "functionname": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the sample",
                    "endPoint": "none"
                },
                "callstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The stacktrace leading into the sample",
                    "endPoint": "none"
                }
            },
            "prof.freeze.sample": {
                "owner": "jrieken",
                "comment": "A callstack that took a long time to execute",
                "sessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Session identifier that allows to correlate samples from one profile",
                    "endPoint": "none"
                },
                "selftime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Self time of the sample",
                    "endPoint": "none"
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Total time of the sample",
                    "endPoint": "none"
                },
                "functionname": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the sample",
                    "endPoint": "none"
                },
                "callstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The stacktrace leading into the sample",
                    "endPoint": "none"
                }
            },
            "update:notAvailable": {
                "owner": "joaomoreno",
                "explicit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Whether the user has manually checked for updates, or this was an automatic check.",
                    "endPoint": "none"
                },
                "comment": "This is used to understand how often VS Code pings the update server for an update and there's none available."
            },
            "update:downloaded": {
                "owner": "joaomoreno",
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version number of the new VS Code that has been downloaded.",
                    "endPoint": "none"
                },
                "comment": "This is used to know how often VS Code has successfully downloaded the update."
            },
            "galleryService:additionalQuery": {
                "owner": "sandy081",
                "comment": "Response information about the additional query to the Marketplace for fetching all versions to get release version",
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "Amount of time taken by the additional query",
                    "endPoint": "none"
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of extensions returned by this additional query",
                    "endPoint": "none"
                }
            },
            "galleryService:query": {
                "owner": "sandy081",
                "comment": "Information about Marketplace query and its response",
                "filtertypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Filter types used in the query.",
                    "endPoint": "none"
                },
                "flags": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Flags passed in the query.",
                    "endPoint": "none"
                },
                "sortby": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "sorted by option passed in the query",
                    "endPoint": "none"
                },
                "sortorder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "sort order option passed in the query",
                    "endPoint": "none"
                },
                "pagenumber": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "requested page number in the query",
                    "endPoint": "none"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "amount of time taken by the query request",
                    "endPoint": "none"
                },
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "whether the query reques is success or not",
                    "endPoint": "none"
                },
                "requestbodysize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "size of the request body",
                    "endPoint": "none"
                },
                "responsebodysize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "size of the response body",
                    "endPoint": "none"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "status code of the response",
                    "endPoint": "none"
                },
                "errorcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "error code of the response",
                    "endPoint": "none"
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "total number of extensions matching the query",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "source that requested this query, eg., recommendations, viewlet",
                    "endPoint": "none"
                },
                "searchtextlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "length of the search text in the query",
                    "endPoint": "none"
                }
            },
            "galleryService:cdnFallback": {
                "owner": "sandy081",
                "comment": "Fallback request information when the primary asset request to CDN fails",
                "url": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "asset url that failed",
                    "endPoint": "none"
                },
                "message": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "error message",
                    "endPoint": "none"
                }
            },
            "exeExtensionRecommendations:alreadyInstalled": {
                "owner": "sandy081",
                "comment": "Information about executable based extension recommendation",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "id of the recommended extension",
                    "endPoint": "none"
                },
                "exename": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "name of the executable for which extension is being recommended",
                    "endPoint": "none"
                }
            },
            "exeExtensionRecommendations:notInstalled": {
                "owner": "sandy081",
                "comment": "Information about executable based extension recommendation",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "id of the recommended extension",
                    "endPoint": "none"
                },
                "exename": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "name of the executable for which extension is being recommended",
                    "endPoint": "none"
                }
            },
            "workspace.stats": {
                "owner": "lramos15",
                "comment": "Metadata related to the workspace",
                "workspace.id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A UUID given to a workspace to identify it.",
                    "endPoint": "none"
                },
                "renderersessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the session",
                    "endPoint": "none"
                }
            },
            "workspace.stats.file": {
                "owner": "lramos15",
                "comment": "Helps us gain insights into what type of files are being used in a workspace",
                "renderersessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the session.",
                    "endPoint": "none"
                },
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The type of file",
                    "endPoint": "none"
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "How many types of that file are present",
                    "endPoint": "none"
                }
            },
            "workspace.stats.launchConfigFile": {
                "owner": "lramos15",
                "comment": "Helps us gain insights into what type of files are being used in a workspace",
                "renderersessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the session.",
                    "endPoint": "none"
                },
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The type of file",
                    "endPoint": "none"
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "How many types of that file are present",
                    "endPoint": "none"
                }
            },
            "workspace.stats.configFiles": {
                "owner": "lramos15",
                "comment": "Helps us gain insights into what type of files are being used in a workspace",
                "renderersessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the session.",
                    "endPoint": "none"
                },
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The type of file",
                    "endPoint": "none"
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "How many types of that file are present",
                    "endPoint": "none"
                }
            },
            "editorActionInvoked": {
                "owner": "alexdima",
                "comment": "An editor action has been invoked.",
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The label of the action that was invoked.",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of the action that was invoked.",
                    "endPoint": "none"
                }
            },
            "sharedprocesserror": {
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The type of shared process crash to understand the nature of the crash better.",
                    "endPoint": "none"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The type of shared process crash to understand the nature of the crash better.",
                    "endPoint": "none"
                },
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The type of shared process crash to understand the nature of the crash better.",
                    "endPoint": "none"
                },
                "visible": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "Whether shared process window was visible or not.",
                    "endPoint": "none"
                },
                "shuttingdown": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "Whether the application is shutting down when the crash happens.",
                    "endPoint": "none"
                },
                "owner": "bpasero",
                "comment": "Event which fires whenever an error occurs in the shared process"
            },
            "indexedDBFileSystemProviderError": {
                "owner": "sandy081",
                "comment": "Information about errors that occur in the IndexedDB file system provider",
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "IndexedDB file system provider scheme for which this error occurred",
                    "endPoint": "none"
                },
                "operation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "operation during which this error occurred",
                    "endPoint": "none"
                },
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "error code",
                    "endPoint": "none"
                }
            },
            "startupLayout": {
                "owner": "sbatten",
                "comment": "Information about the layout of the workbench during statup",
                "activitybarvisible": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Whether or the not the activity bar is visible",
                    "endPoint": "none"
                },
                "sidebarvisible": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Whether or the not the primary side bar is visible",
                    "endPoint": "none"
                },
                "auxiliarybarvisible": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Whether or the not the secondary side bar is visible",
                    "endPoint": "none"
                },
                "panelvisible": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Whether or the not the panel is visible",
                    "endPoint": "none"
                },
                "statusbarvisible": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Whether or the not the status bar is visible",
                    "endPoint": "none"
                },
                "sidebarposition": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the primary side bar is on the left or right",
                    "endPoint": "none"
                },
                "panelposition": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the panel is on the bottom, left, or right",
                    "endPoint": "none"
                }
            },
            "serverStart": {
                "owner": "alexdima",
                "comment": "The server has started up",
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The time the server started at.",
                    "endPoint": "none"
                },
                "startedtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The time the server began listening for connections.",
                    "endPoint": "none"
                },
                "codeloadedtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The time which the code loaded on the server",
                    "endPoint": "none"
                },
                "readytime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The time when the server was completely ready",
                    "endPoint": "none"
                }
            },
            "UnhandledError": {
                "owner": "lramos15, sbatten",
                "comment": "Whenever an error in VS Code is thrown.",
                "callstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The callstack of the error.",
                    "endPoint": "none"
                },
                "msg": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The message of the error. Normally the first line int the callstack.",
                    "endPoint": "none"
                },
                "file": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The file the error originated from.",
                    "endPoint": "none"
                },
                "line": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The line the error originate on.",
                    "endPoint": "none"
                },
                "column": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The column of the line which the error orginated on.",
                    "endPoint": "none"
                },
                "uncaught_error_name": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "If the error is uncaught what is the error type",
                    "endPoint": "none"
                },
                "uncaught_error_msg": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "If the error is uncaught this is just msg but for uncaught errors.",
                    "endPoint": "none"
                },
                "count": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "How many times this error has been thrown",
                    "endPoint": "none"
                }
            },
            "settingsEditor.searchError": {
                "owner": "rzhao271",
                "comment": "Helps understand when settings search errors out",
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "FeatureInsight",
                    "owner": "rzhao271",
                    "comment": "The error message of the search error.",
                    "endPoint": "none"
                }
            }
        },
        "commonProperties": {
            "common.version.shell": {
                "classification": "SystemMetaData",
                "purpose": "PerformanceAndHealth",
                "endPoint": "none"
            },
            "common.version.renderer": {
                "classification": "SystemMetaData",
                "purpose": "PerformanceAndHealth",
                "endPoint": "none"
            },
            "common.firstsessiondate": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.lastsessiondate": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.isnewsession": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.remoteauthority": {
                "classification": "SystemMetaData",
                "purpose": "PerformanceAndHealth",
                "endPoint": "none"
            },
            "common.sandboxed": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.cli": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.machineid": {
                "classification": "EndUserPseudonymizedInformation",
                "purpose": "FeatureInsight",
                "endPoint": "MacAddressHash"
            },
            "sessionid": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "commithash": {
                "classification": "SystemMetaData",
                "purpose": "PerformanceAndHealth",
                "endPoint": "none"
            },
            "version": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.platform": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.product": {
                "classification": "SystemMetaData",
                "purpose": "PerformanceAndHealth",
                "endPoint": "none"
            },
            "common.useragent": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.istouchdevice": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.msftinternal": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none",
                "isMeasurement": true
            },
            "timestamp": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.timesincesessionstart": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none",
                "isMeasurement": true
            },
            "common.sequence": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none",
                "isMeasurement": true
            },
            "abexp.assignmentcontext": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.platformversion": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.nodeplatform": {
                "classification": "SystemMetaData",
                "purpose": "PerformanceAndHealth",
                "endPoint": "none"
            },
            "common.nodearch": {
                "classification": "SystemMetaData",
                "purpose": "PerformanceAndHealth",
                "endPoint": "none"
            },
            "common.snap": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.platformdetail": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.source": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "pluginhosttelemetry": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none",
                "isMeasurement": true
            }
        }
    },
    "vscode-extensions": {
        "events": {
            "typescript-language-features/tsserver.spawned": {
                "owner": "mjbvz",
                "localtypescriptversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "typescriptversionsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/tsserver.error": {
                "owner": "mjbvz",
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/tsserver.exitWithCode": {
                "owner": "mjbvz",
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "signal": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/serviceExited": {
                "owner": "mjbvz",
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/fatalError": {
                "owner": "mjbvz",
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "serverid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "sanitizedstack": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "badclient": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/typingsInstalled": {
                "owner": "mjbvz",
                "installedpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "installsuccess": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "typingsinstallerversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/js.hintProjectExcludes": {
                "owner": "mjbvz",
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/organizeImports.execute": {
                "owner": "mjbvz",
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/quickFix.execute": {
                "owner": "mjbvz",
                "fixname": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/quickFixAll.execute": {
                "owner": "mjbvz",
                "fixname": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/languageServiceErrorResponse": {
                "owner": "mjbvz",
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "serverid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "sanitizedstack": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "badclient": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/refactor.execute": {
                "owner": "mjbvz",
                "action": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/completions.accept": {
                "owner": "mjbvz",
                "ispackagejsonimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isimportstatementcompletion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/completions.execute": {
                "owner": "mjbvz",
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "flags": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "updategraphdurationms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "createautoimportproviderprogramdurationms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "includespackagejsonimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "includesimportstatementcompletion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "git/git.missing": {
                "owner": "lszomoru"
            },
            "git/statusLimit": {
                "owner": "lszomoru",
                "ignoresubmodules": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Setting indicating whether submodules are ignored",
                    "endPoint": "none"
                },
                "limit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Setting indicating the limit of status entries",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "statuslength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of status entries",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of ms the operation took",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "git/statusSlow": {
                "owner": "digitarald",
                "comment": "Reports when git status is slower than 5s",
                "expiration": "1.73",
                "ignoresubmodules": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Setting indicating whether submodules are ignored",
                    "endPoint": "none"
                },
                "didhitlimit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of status entries",
                    "endPoint": "none"
                },
                "didwarnaboutlimit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "True when the user was warned about slow git status",
                    "endPoint": "none"
                },
                "statuslength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of status entries",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of ms the operation took",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "git/git.repositoryInitialScan": {
                "owner": "lszomoru",
                "autorepositorydetection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Setting that controls the initial repository scan",
                    "endPoint": "none"
                },
                "repositorycount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories opened during initial repository scan",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "git/clone": {
                "owner": "lszomoru",
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of the git operation",
                    "endPoint": "none"
                },
                "openfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Indicates whether the folder is opened following the clone operation",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "git/git.command": {
                "owner": "lszomoru",
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command id of the command being executed",
                    "endPoint": "none"
                }
            },
            "json-language-features/json.schema": {
                "owner": "aeschli",
                "comment": "Measure the use of the Azure resource manager schemas",
                "schemaurl": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The azure schema URL that was requested.",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/error": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/report-start-up-timings": {
                "requestedcontentwasnotdetectedreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "steps": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "all": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "${wildcard}": [
                    {
                        "${prefix}": "request.",
                        "${classification}": {
                            "classification": "SystemMetaData",
                            "purpose": "FeatureInsight",
                            "endPoint": "none"
                        }
                    },
                    {
                        "${prefix}": "waitingafter",
                        "${classification}": {
                            "classification": "SystemMetaData",
                            "purpose": "FeatureInsight",
                            "endPoint": "none"
                        }
                    }
                ],
                "attach": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.configuredebuggingsession.internal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.configuredebuggingsession.target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.configuredebuggingsession.end": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.attachtotargetdebuggerwebsocket": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.requestdebuggertargetsinformation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.processdebuggertargetsinformation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "beforefirststep": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "afterlaststep": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/targetCount": {
                "numtargets": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/targetDebugProtocolVersion": {
                "debugprotocolversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/error-while-adding-custom-global-property": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/initialize": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/configurationDone": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/launch": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/debugStarted": {
                "request": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "args": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/attach": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/debugStopped": {
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/target/notification/onPaused": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/target/notification/onScriptParsed": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/exceptionInfo": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/toggleSmartStep": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/toggleSkipFileStatus": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/loadedSources": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/disconnect": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/setBreakpoints": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/setBreakpointsRequest": {
                "fileext": {
                    "classification": "CustomerContent",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/setExceptionBreakpoints": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/continue": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/continueRequest": {
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/next": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/nextRequest": {
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/stepIn": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/stepInRequest": {
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/stepOut": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/stepOutRequest": {
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/stepBack": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/reverseContinue": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/pause": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/pauseRequest": {
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/stackTrace": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/scopes": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/variables": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/source": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/threads": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/evaluate": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/setVariable": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/restartFrame": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/ClientRequest/completions": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/nodeVersion": {
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadapter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.target.version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node2/debugProtocolErrorResponse": {
                "error": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-vscode.node2/optinstatus": {
                "optin": {
                    "classification": "SystemMetaData",
                    "purpose": "BusinessInsight",
                    "isMeasurement": true
                }
            },
            "ms-vscode.node/ClientRequest/initialize": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/configurationDone": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/launch": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/debugStarted": {
                "request": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "args": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/attach": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/debugStopped": {
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/target/notification/onPaused": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/target/notification/onScriptParsed": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/exceptionInfo": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/toggleSmartStep": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/toggleSkipFileStatus": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/loadedSources": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/disconnect": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/setBreakpoints": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/setBreakpointsRequest": {
                "fileext": {
                    "classification": "CustomerContent",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/setExceptionBreakpoints": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/continue": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/continueRequest": {
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/next": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/nextRequest": {
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/stepIn": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/stepInRequest": {
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/stepOut": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/stepOutRequest": {
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/stepBack": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/reverseContinue": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/pause": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/pauseRequest": {
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/stackTrace": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/scopes": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/variables": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/source": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/threads": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/evaluate": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/setVariable": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/restartFrame": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/completions": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/error": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/report-start-up-timings": {
                "requestedcontentwasnotdetectedreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "steps": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "all": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "${wildcard}": [
                    {
                        "${prefix}": "request.",
                        "${classification}": {
                            "classification": "SystemMetaData",
                            "purpose": "FeatureInsight",
                            "endPoint": "none"
                        }
                    },
                    {
                        "${prefix}": "waitingafter",
                        "${classification}": {
                            "classification": "SystemMetaData",
                            "purpose": "FeatureInsight",
                            "endPoint": "none"
                        }
                    }
                ],
                "attach": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.configuredebuggingsession.internal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.configuredebuggingsession.target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.configuredebuggingsession.end": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.attachtotargetdebuggerwebsocket": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.requestdebuggertargetsinformation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.processdebuggertargetsinformation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "beforefirststep": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "afterlaststep": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/targetCount": {
                "numtargets": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/targetDebugProtocolVersion": {
                "debugprotocolversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/error-while-adding-custom-global-property": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/nodeVersion": {
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/debugProtocolErrorResponse": {
                "error": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-vscode.node/optinstatus": {
                "optin": {
                    "classification": "SystemMetaData",
                    "purpose": "BusinessInsight",
                    "isMeasurement": true
                }
            }
        },
        "commonProperties": {
            "common.os": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.nodearch": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.platformversion": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.extname": {
                "classification": "PublicNonPersonalData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.extversion": {
                "classification": "PublicNonPersonalData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.vscodemachineid": {
                "classification": "EndUserPseudonymizedInformation",
                "purpose": "FeatureInsight",
                "endPoint": "MacAddressHash"
            },
            "common.vscodesessionid": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.vscodeversion": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.uikind": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.remotename": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.isnewappinstall": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.product": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.telemetryclientversion": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            }
        }
    }
}
